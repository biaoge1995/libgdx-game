// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: avro/character.proto

package org.cbzmq.game.proto;

public final class CharacterProto {
  private CharacterProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CharacterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .CharacterType type = 1;
    /**
     * <code>required .CharacterType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .CharacterType type = 1;</code>
     */
    org.cbzmq.game.enums.CharacterType getType();

    // required .Vector2 position = 2;
    /**
     * <code>required .Vector2 position = 2;</code>
     *
     * <pre>
     *位置向量
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required .Vector2 position = 2;</code>
     *
     * <pre>
     *位置向量
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.Vector2 getPosition();
    /**
     * <code>required .Vector2 position = 2;</code>
     *
     * <pre>
     *位置向量
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getPositionOrBuilder();

    // optional .Vector2 targetPosition = 3;
    /**
     * <code>optional .Vector2 targetPosition = 3;</code>
     *
     * <pre>
     *目标位置向量
     * </pre>
     */
    boolean hasTargetPosition();
    /**
     * <code>optional .Vector2 targetPosition = 3;</code>
     *
     * <pre>
     *目标位置向量
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.Vector2 getTargetPosition();
    /**
     * <code>optional .Vector2 targetPosition = 3;</code>
     *
     * <pre>
     *目标位置向量
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getTargetPositionOrBuilder();

    // required .Vector2 velocity = 4;
    /**
     * <code>required .Vector2 velocity = 4;</code>
     *
     * <pre>
     *速度向量
     * </pre>
     */
    boolean hasVelocity();
    /**
     * <code>required .Vector2 velocity = 4;</code>
     *
     * <pre>
     *速度向量
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.Vector2 getVelocity();
    /**
     * <code>required .Vector2 velocity = 4;</code>
     *
     * <pre>
     *速度向量
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getVelocityOrBuilder();

    // required .CharacterState state = 5;
    /**
     * <code>required .CharacterState state = 5;</code>
     *
     * <pre>
     *默认的动画状态
     * </pre>
     */
    boolean hasState();
    /**
     * <code>required .CharacterState state = 5;</code>
     *
     * <pre>
     *默认的动画状态
     * </pre>
     */
    org.cbzmq.game.enums.CharacterState getState();

    // optional float stateTime = 6;
    /**
     * <code>optional float stateTime = 6;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStateTime();
    /**
     * <code>optional float stateTime = 6;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    float getStateTime();

    // required float dir = 7;
    /**
     * <code>required float dir = 7;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    boolean hasDir();
    /**
     * <code>required float dir = 7;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    float getDir();

    // optional float airTime = 8;
    /**
     * <code>optional float airTime = 8;</code>
     *
     * <pre>
     *空中的时间
     * </pre>
     */
    boolean hasAirTime();
    /**
     * <code>optional float airTime = 8;</code>
     *
     * <pre>
     *空中的时间
     * </pre>
     */
    float getAirTime();

    // required .Rectangle rect = 9;
    /**
     * <code>required .Rectangle rect = 9;</code>
     *
     * <pre>
     *角色的矩阵
     * </pre>
     */
    boolean hasRect();
    /**
     * <code>required .Rectangle rect = 9;</code>
     *
     * <pre>
     *角色的矩阵
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.Rectangle getRect();
    /**
     * <code>required .Rectangle rect = 9;</code>
     *
     * <pre>
     *角色的矩阵
     * </pre>
     */
    org.cbzmq.game.proto.CharacterProto.RectangleOrBuilder getRectOrBuilder();

    // required bool stateChanged = 11;
    /**
     * <code>required bool stateChanged = 11;</code>
     *
     * <pre>
     *是否状态改变
     * </pre>
     */
    boolean hasStateChanged();
    /**
     * <code>required bool stateChanged = 11;</code>
     *
     * <pre>
     *是否状态改变
     * </pre>
     */
    boolean getStateChanged();

    // required float hp = 12;
    /**
     * <code>required float hp = 12;</code>
     *
     * <pre>
     *雪条
     * </pre>
     */
    boolean hasHp();
    /**
     * <code>required float hp = 12;</code>
     *
     * <pre>
     *雪条
     * </pre>
     */
    float getHp();

    // optional float maxVelocityX = 13;
    /**
     * <code>optional float maxVelocityX = 13;</code>
     *
     * <pre>
     *最大x方向上的位移
     * </pre>
     */
    boolean hasMaxVelocityX();
    /**
     * <code>optional float maxVelocityX = 13;</code>
     *
     * <pre>
     *最大x方向上的位移
     * </pre>
     */
    float getMaxVelocityX();

    // optional float collisionOffsetY = 14;
    /**
     * <code>optional float collisionOffsetY = 14;</code>
     *
     * <pre>
     *碰撞Y的偏移量
     * </pre>
     */
    boolean hasCollisionOffsetY();
    /**
     * <code>optional float collisionOffsetY = 14;</code>
     *
     * <pre>
     *碰撞Y的偏移量
     * </pre>
     */
    float getCollisionOffsetY();

    // optional float jumpVelocity = 15;
    /**
     * <code>optional float jumpVelocity = 15;</code>
     *
     * <pre>
     *跳的速度在Y上
     * </pre>
     */
    boolean hasJumpVelocity();
    /**
     * <code>optional float jumpVelocity = 15;</code>
     *
     * <pre>
     *跳的速度在Y上
     * </pre>
     */
    float getJumpVelocity();

    // optional float damage = 16;
    /**
     * <code>optional float damage = 16;</code>
     *
     * <pre>
     *伤害
     * </pre>
     */
    boolean hasDamage();
    /**
     * <code>optional float damage = 16;</code>
     *
     * <pre>
     *伤害
     * </pre>
     */
    float getDamage();

    // optional float collisionTimer = 17;
    /**
     * <code>optional float collisionTimer = 17;</code>
     *
     * <pre>
     *控制碰撞时的无敌时间和闪烁
     * </pre>
     */
    boolean hasCollisionTimer();
    /**
     * <code>optional float collisionTimer = 17;</code>
     *
     * <pre>
     *控制碰撞时的无敌时间和闪烁
     * </pre>
     */
    float getCollisionTimer();

    // optional float shootTimer = 18;
    /**
     * <code>optional float shootTimer = 18;</code>
     *
     * <pre>
     *计时器
     *通过timer控制射击的时间间隔
     * </pre>
     */
    boolean hasShootTimer();
    /**
     * <code>optional float shootTimer = 18;</code>
     *
     * <pre>
     *计时器
     *通过timer控制射击的时间间隔
     * </pre>
     */
    float getShootTimer();

    // optional float hpTimer = 19;
    /**
     * <code>optional float hpTimer = 19;</code>
     *
     * <pre>
     *控制回血时间
     * </pre>
     */
    boolean hasHpTimer();
    /**
     * <code>optional float hpTimer = 19;</code>
     *
     * <pre>
     *控制回血时间
     * </pre>
     */
    float getHpTimer();

    // repeated .Character bullets = 20;
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    java.util.List<org.cbzmq.game.proto.CharacterProto.Character>
        getBulletsList();
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    org.cbzmq.game.proto.CharacterProto.Character getBullets(int index);
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    int getBulletsCount();
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    java.util.List<? extends org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder>
        getBulletsOrBuilderList();
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder getBulletsOrBuilder(
        int index);

    // optional .CharacterType player = 21;
    /**
     * <code>optional .CharacterType player = 21;</code>
     *
     * <pre>
     ** Bullet 相关参数 
     * </pre>
     */
    boolean hasPlayer();
    /**
     * <code>optional .CharacterType player = 21;</code>
     *
     * <pre>
     ** Bullet 相关参数 
     * </pre>
     */
    org.cbzmq.game.enums.CharacterType getPlayer();

    // optional float deathTimer = 22;
    /**
     * <code>optional float deathTimer = 22;</code>
     */
    boolean hasDeathTimer();
    /**
     * <code>optional float deathTimer = 22;</code>
     */
    float getDeathTimer();

    // optional float maxVelocityGroundX = 23;
    /**
     * <code>optional float maxVelocityGroundX = 23;</code>
     */
    boolean hasMaxVelocityGroundX();
    /**
     * <code>optional float maxVelocityGroundX = 23;</code>
     */
    float getMaxVelocityGroundX();

    // optional float jumpDelayTimer = 24;
    /**
     * <code>optional float jumpDelayTimer = 24;</code>
     */
    boolean hasJumpDelayTimer();
    /**
     * <code>optional float jumpDelayTimer = 24;</code>
     */
    float getJumpDelayTimer();

    // optional .EnemyType enemyType = 25;
    /**
     * <code>optional .EnemyType enemyType = 25;</code>
     */
    boolean hasEnemyType();
    /**
     * <code>optional .EnemyType enemyType = 25;</code>
     */
    org.cbzmq.game.enums.EnemyType getEnemyType();

    // optional float size = 26;
    /**
     * <code>optional float size = 26;</code>
     */
    boolean hasSize();
    /**
     * <code>optional float size = 26;</code>
     */
    float getSize();

    // optional float bigTimer = 27;
    /**
     * <code>optional float bigTimer = 27;</code>
     */
    boolean hasBigTimer();
    /**
     * <code>optional float bigTimer = 27;</code>
     */
    float getBigTimer();

    // optional float spawnSmallsTimer = 28;
    /**
     * <code>optional float spawnSmallsTimer = 28;</code>
     */
    boolean hasSpawnSmallsTimer();
    /**
     * <code>optional float spawnSmallsTimer = 28;</code>
     */
    float getSpawnSmallsTimer();

    // optional bool move = 29;
    /**
     * <code>optional bool move = 29;</code>
     */
    boolean hasMove();
    /**
     * <code>optional bool move = 29;</code>
     */
    boolean getMove();

    // optional bool forceJump = 30;
    /**
     * <code>optional bool forceJump = 30;</code>
     */
    boolean hasForceJump();
    /**
     * <code>optional bool forceJump = 30;</code>
     */
    boolean getForceJump();

    // optional int32 collisions = 31;
    /**
     * <code>optional int32 collisions = 31;</code>
     */
    boolean hasCollisions();
    /**
     * <code>optional int32 collisions = 31;</code>
     */
    int getCollisions();

    // optional float knockbackX = 32;
    /**
     * <code>optional float knockbackX = 32;</code>
     */
    boolean hasKnockbackX();
    /**
     * <code>optional float knockbackX = 32;</code>
     */
    float getKnockbackX();

    // optional float knockbackY = 33;
    /**
     * <code>optional float knockbackY = 33;</code>
     */
    boolean hasKnockbackY();
    /**
     * <code>optional float knockbackY = 33;</code>
     */
    float getKnockbackY();

    // required int32 id = 34;
    /**
     * <code>required int32 id = 34;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 34;</code>
     */
    int getId();
  }
  /**
   * Protobuf type {@code Character}
   */
  public static final class Character extends
      com.google.protobuf.GeneratedMessage
      implements CharacterOrBuilder {
    // Use Character.newBuilder() to construct.
    private Character(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Character(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Character defaultInstance;
    public static Character getDefaultInstance() {
      return defaultInstance;
    }

    public Character getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Character(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.cbzmq.game.enums.CharacterType value = org.cbzmq.game.enums.CharacterType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.cbzmq.game.proto.CharacterProto.Vector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(org.cbzmq.game.proto.CharacterProto.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.cbzmq.game.proto.CharacterProto.Vector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = targetPosition_.toBuilder();
              }
              targetPosition_ = input.readMessage(org.cbzmq.game.proto.CharacterProto.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetPosition_);
                targetPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.cbzmq.game.proto.CharacterProto.Vector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = velocity_.toBuilder();
              }
              velocity_ = input.readMessage(org.cbzmq.game.proto.CharacterProto.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(velocity_);
                velocity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              org.cbzmq.game.enums.CharacterState value = org.cbzmq.game.enums.CharacterState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                state_ = value;
              }
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              stateTime_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              dir_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              airTime_ = input.readFloat();
              break;
            }
            case 74: {
              org.cbzmq.game.proto.CharacterProto.Rectangle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = rect_.toBuilder();
              }
              rect_ = input.readMessage(org.cbzmq.game.proto.CharacterProto.Rectangle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rect_);
                rect_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              stateChanged_ = input.readBool();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000400;
              hp_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00000800;
              maxVelocityX_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00001000;
              collisionOffsetY_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00002000;
              jumpVelocity_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00004000;
              damage_ = input.readFloat();
              break;
            }
            case 141: {
              bitField0_ |= 0x00008000;
              collisionTimer_ = input.readFloat();
              break;
            }
            case 149: {
              bitField0_ |= 0x00010000;
              shootTimer_ = input.readFloat();
              break;
            }
            case 157: {
              bitField0_ |= 0x00020000;
              hpTimer_ = input.readFloat();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                bullets_ = new java.util.ArrayList<org.cbzmq.game.proto.CharacterProto.Character>();
                mutable_bitField0_ |= 0x00040000;
              }
              bullets_.add(input.readMessage(org.cbzmq.game.proto.CharacterProto.Character.PARSER, extensionRegistry));
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              org.cbzmq.game.enums.CharacterType value = org.cbzmq.game.enums.CharacterType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(21, rawValue);
              } else {
                bitField0_ |= 0x00040000;
                player_ = value;
              }
              break;
            }
            case 181: {
              bitField0_ |= 0x00080000;
              deathTimer_ = input.readFloat();
              break;
            }
            case 189: {
              bitField0_ |= 0x00100000;
              maxVelocityGroundX_ = input.readFloat();
              break;
            }
            case 197: {
              bitField0_ |= 0x00200000;
              jumpDelayTimer_ = input.readFloat();
              break;
            }
            case 200: {
              int rawValue = input.readEnum();
              org.cbzmq.game.enums.EnemyType value = org.cbzmq.game.enums.EnemyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(25, rawValue);
              } else {
                bitField0_ |= 0x00400000;
                enemyType_ = value;
              }
              break;
            }
            case 213: {
              bitField0_ |= 0x00800000;
              size_ = input.readFloat();
              break;
            }
            case 221: {
              bitField0_ |= 0x01000000;
              bigTimer_ = input.readFloat();
              break;
            }
            case 229: {
              bitField0_ |= 0x02000000;
              spawnSmallsTimer_ = input.readFloat();
              break;
            }
            case 232: {
              bitField0_ |= 0x04000000;
              move_ = input.readBool();
              break;
            }
            case 240: {
              bitField0_ |= 0x08000000;
              forceJump_ = input.readBool();
              break;
            }
            case 248: {
              bitField0_ |= 0x10000000;
              collisions_ = input.readInt32();
              break;
            }
            case 261: {
              bitField0_ |= 0x20000000;
              knockbackX_ = input.readFloat();
              break;
            }
            case 269: {
              bitField0_ |= 0x40000000;
              knockbackY_ = input.readFloat();
              break;
            }
            case 272: {
              bitField0_ |= 0x80000000;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          bullets_ = java.util.Collections.unmodifiableList(bullets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.cbzmq.game.proto.CharacterProto.internal_static_Character_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.cbzmq.game.proto.CharacterProto.internal_static_Character_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.cbzmq.game.proto.CharacterProto.Character.class, org.cbzmq.game.proto.CharacterProto.Character.Builder.class);
    }

    public static com.google.protobuf.Parser<Character> PARSER =
        new com.google.protobuf.AbstractParser<Character>() {
      public Character parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Character(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Character> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .CharacterType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.cbzmq.game.enums.CharacterType type_;
    /**
     * <code>required .CharacterType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .CharacterType type = 1;</code>
     */
    public org.cbzmq.game.enums.CharacterType getType() {
      return type_;
    }

    // required .Vector2 position = 2;
    public static final int POSITION_FIELD_NUMBER = 2;
    private org.cbzmq.game.proto.CharacterProto.Vector2 position_;
    /**
     * <code>required .Vector2 position = 2;</code>
     *
     * <pre>
     *位置向量
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Vector2 position = 2;</code>
     *
     * <pre>
     *位置向量
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.Vector2 getPosition() {
      return position_;
    }
    /**
     * <code>required .Vector2 position = 2;</code>
     *
     * <pre>
     *位置向量
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getPositionOrBuilder() {
      return position_;
    }

    // optional .Vector2 targetPosition = 3;
    public static final int TARGETPOSITION_FIELD_NUMBER = 3;
    private org.cbzmq.game.proto.CharacterProto.Vector2 targetPosition_;
    /**
     * <code>optional .Vector2 targetPosition = 3;</code>
     *
     * <pre>
     *目标位置向量
     * </pre>
     */
    public boolean hasTargetPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Vector2 targetPosition = 3;</code>
     *
     * <pre>
     *目标位置向量
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.Vector2 getTargetPosition() {
      return targetPosition_;
    }
    /**
     * <code>optional .Vector2 targetPosition = 3;</code>
     *
     * <pre>
     *目标位置向量
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getTargetPositionOrBuilder() {
      return targetPosition_;
    }

    // required .Vector2 velocity = 4;
    public static final int VELOCITY_FIELD_NUMBER = 4;
    private org.cbzmq.game.proto.CharacterProto.Vector2 velocity_;
    /**
     * <code>required .Vector2 velocity = 4;</code>
     *
     * <pre>
     *速度向量
     * </pre>
     */
    public boolean hasVelocity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .Vector2 velocity = 4;</code>
     *
     * <pre>
     *速度向量
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.Vector2 getVelocity() {
      return velocity_;
    }
    /**
     * <code>required .Vector2 velocity = 4;</code>
     *
     * <pre>
     *速度向量
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getVelocityOrBuilder() {
      return velocity_;
    }

    // required .CharacterState state = 5;
    public static final int STATE_FIELD_NUMBER = 5;
    private org.cbzmq.game.enums.CharacterState state_;
    /**
     * <code>required .CharacterState state = 5;</code>
     *
     * <pre>
     *默认的动画状态
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .CharacterState state = 5;</code>
     *
     * <pre>
     *默认的动画状态
     * </pre>
     */
    public org.cbzmq.game.enums.CharacterState getState() {
      return state_;
    }

    // optional float stateTime = 6;
    public static final int STATETIME_FIELD_NUMBER = 6;
    private float stateTime_;
    /**
     * <code>optional float stateTime = 6;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStateTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float stateTime = 6;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public float getStateTime() {
      return stateTime_;
    }

    // required float dir = 7;
    public static final int DIR_FIELD_NUMBER = 7;
    private float dir_;
    /**
     * <code>required float dir = 7;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    public boolean hasDir() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float dir = 7;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    public float getDir() {
      return dir_;
    }

    // optional float airTime = 8;
    public static final int AIRTIME_FIELD_NUMBER = 8;
    private float airTime_;
    /**
     * <code>optional float airTime = 8;</code>
     *
     * <pre>
     *空中的时间
     * </pre>
     */
    public boolean hasAirTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float airTime = 8;</code>
     *
     * <pre>
     *空中的时间
     * </pre>
     */
    public float getAirTime() {
      return airTime_;
    }

    // required .Rectangle rect = 9;
    public static final int RECT_FIELD_NUMBER = 9;
    private org.cbzmq.game.proto.CharacterProto.Rectangle rect_;
    /**
     * <code>required .Rectangle rect = 9;</code>
     *
     * <pre>
     *角色的矩阵
     * </pre>
     */
    public boolean hasRect() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required .Rectangle rect = 9;</code>
     *
     * <pre>
     *角色的矩阵
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.Rectangle getRect() {
      return rect_;
    }
    /**
     * <code>required .Rectangle rect = 9;</code>
     *
     * <pre>
     *角色的矩阵
     * </pre>
     */
    public org.cbzmq.game.proto.CharacterProto.RectangleOrBuilder getRectOrBuilder() {
      return rect_;
    }

    // required bool stateChanged = 11;
    public static final int STATECHANGED_FIELD_NUMBER = 11;
    private boolean stateChanged_;
    /**
     * <code>required bool stateChanged = 11;</code>
     *
     * <pre>
     *是否状态改变
     * </pre>
     */
    public boolean hasStateChanged() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required bool stateChanged = 11;</code>
     *
     * <pre>
     *是否状态改变
     * </pre>
     */
    public boolean getStateChanged() {
      return stateChanged_;
    }

    // required float hp = 12;
    public static final int HP_FIELD_NUMBER = 12;
    private float hp_;
    /**
     * <code>required float hp = 12;</code>
     *
     * <pre>
     *雪条
     * </pre>
     */
    public boolean hasHp() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required float hp = 12;</code>
     *
     * <pre>
     *雪条
     * </pre>
     */
    public float getHp() {
      return hp_;
    }

    // optional float maxVelocityX = 13;
    public static final int MAXVELOCITYX_FIELD_NUMBER = 13;
    private float maxVelocityX_;
    /**
     * <code>optional float maxVelocityX = 13;</code>
     *
     * <pre>
     *最大x方向上的位移
     * </pre>
     */
    public boolean hasMaxVelocityX() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float maxVelocityX = 13;</code>
     *
     * <pre>
     *最大x方向上的位移
     * </pre>
     */
    public float getMaxVelocityX() {
      return maxVelocityX_;
    }

    // optional float collisionOffsetY = 14;
    public static final int COLLISIONOFFSETY_FIELD_NUMBER = 14;
    private float collisionOffsetY_;
    /**
     * <code>optional float collisionOffsetY = 14;</code>
     *
     * <pre>
     *碰撞Y的偏移量
     * </pre>
     */
    public boolean hasCollisionOffsetY() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float collisionOffsetY = 14;</code>
     *
     * <pre>
     *碰撞Y的偏移量
     * </pre>
     */
    public float getCollisionOffsetY() {
      return collisionOffsetY_;
    }

    // optional float jumpVelocity = 15;
    public static final int JUMPVELOCITY_FIELD_NUMBER = 15;
    private float jumpVelocity_;
    /**
     * <code>optional float jumpVelocity = 15;</code>
     *
     * <pre>
     *跳的速度在Y上
     * </pre>
     */
    public boolean hasJumpVelocity() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float jumpVelocity = 15;</code>
     *
     * <pre>
     *跳的速度在Y上
     * </pre>
     */
    public float getJumpVelocity() {
      return jumpVelocity_;
    }

    // optional float damage = 16;
    public static final int DAMAGE_FIELD_NUMBER = 16;
    private float damage_;
    /**
     * <code>optional float damage = 16;</code>
     *
     * <pre>
     *伤害
     * </pre>
     */
    public boolean hasDamage() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float damage = 16;</code>
     *
     * <pre>
     *伤害
     * </pre>
     */
    public float getDamage() {
      return damage_;
    }

    // optional float collisionTimer = 17;
    public static final int COLLISIONTIMER_FIELD_NUMBER = 17;
    private float collisionTimer_;
    /**
     * <code>optional float collisionTimer = 17;</code>
     *
     * <pre>
     *控制碰撞时的无敌时间和闪烁
     * </pre>
     */
    public boolean hasCollisionTimer() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float collisionTimer = 17;</code>
     *
     * <pre>
     *控制碰撞时的无敌时间和闪烁
     * </pre>
     */
    public float getCollisionTimer() {
      return collisionTimer_;
    }

    // optional float shootTimer = 18;
    public static final int SHOOTTIMER_FIELD_NUMBER = 18;
    private float shootTimer_;
    /**
     * <code>optional float shootTimer = 18;</code>
     *
     * <pre>
     *计时器
     *通过timer控制射击的时间间隔
     * </pre>
     */
    public boolean hasShootTimer() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float shootTimer = 18;</code>
     *
     * <pre>
     *计时器
     *通过timer控制射击的时间间隔
     * </pre>
     */
    public float getShootTimer() {
      return shootTimer_;
    }

    // optional float hpTimer = 19;
    public static final int HPTIMER_FIELD_NUMBER = 19;
    private float hpTimer_;
    /**
     * <code>optional float hpTimer = 19;</code>
     *
     * <pre>
     *控制回血时间
     * </pre>
     */
    public boolean hasHpTimer() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional float hpTimer = 19;</code>
     *
     * <pre>
     *控制回血时间
     * </pre>
     */
    public float getHpTimer() {
      return hpTimer_;
    }

    // repeated .Character bullets = 20;
    public static final int BULLETS_FIELD_NUMBER = 20;
    private java.util.List<org.cbzmq.game.proto.CharacterProto.Character> bullets_;
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    public java.util.List<org.cbzmq.game.proto.CharacterProto.Character> getBulletsList() {
      return bullets_;
    }
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    public java.util.List<? extends org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder>
        getBulletsOrBuilderList() {
      return bullets_;
    }
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    public int getBulletsCount() {
      return bullets_.size();
    }
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    public org.cbzmq.game.proto.CharacterProto.Character getBullets(int index) {
      return bullets_.get(index);
    }
    /**
     * <code>repeated .Character bullets = 20;</code>
     */
    public org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder getBulletsOrBuilder(
        int index) {
      return bullets_.get(index);
    }

    // optional .CharacterType player = 21;
    public static final int PLAYER_FIELD_NUMBER = 21;
    private org.cbzmq.game.enums.CharacterType player_;
    /**
     * <code>optional .CharacterType player = 21;</code>
     *
     * <pre>
     ** Bullet 相关参数 
     * </pre>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .CharacterType player = 21;</code>
     *
     * <pre>
     ** Bullet 相关参数 
     * </pre>
     */
    public org.cbzmq.game.enums.CharacterType getPlayer() {
      return player_;
    }

    // optional float deathTimer = 22;
    public static final int DEATHTIMER_FIELD_NUMBER = 22;
    private float deathTimer_;
    /**
     * <code>optional float deathTimer = 22;</code>
     */
    public boolean hasDeathTimer() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional float deathTimer = 22;</code>
     */
    public float getDeathTimer() {
      return deathTimer_;
    }

    // optional float maxVelocityGroundX = 23;
    public static final int MAXVELOCITYGROUNDX_FIELD_NUMBER = 23;
    private float maxVelocityGroundX_;
    /**
     * <code>optional float maxVelocityGroundX = 23;</code>
     */
    public boolean hasMaxVelocityGroundX() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional float maxVelocityGroundX = 23;</code>
     */
    public float getMaxVelocityGroundX() {
      return maxVelocityGroundX_;
    }

    // optional float jumpDelayTimer = 24;
    public static final int JUMPDELAYTIMER_FIELD_NUMBER = 24;
    private float jumpDelayTimer_;
    /**
     * <code>optional float jumpDelayTimer = 24;</code>
     */
    public boolean hasJumpDelayTimer() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional float jumpDelayTimer = 24;</code>
     */
    public float getJumpDelayTimer() {
      return jumpDelayTimer_;
    }

    // optional .EnemyType enemyType = 25;
    public static final int ENEMYTYPE_FIELD_NUMBER = 25;
    private org.cbzmq.game.enums.EnemyType enemyType_;
    /**
     * <code>optional .EnemyType enemyType = 25;</code>
     */
    public boolean hasEnemyType() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .EnemyType enemyType = 25;</code>
     */
    public org.cbzmq.game.enums.EnemyType getEnemyType() {
      return enemyType_;
    }

    // optional float size = 26;
    public static final int SIZE_FIELD_NUMBER = 26;
    private float size_;
    /**
     * <code>optional float size = 26;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional float size = 26;</code>
     */
    public float getSize() {
      return size_;
    }

    // optional float bigTimer = 27;
    public static final int BIGTIMER_FIELD_NUMBER = 27;
    private float bigTimer_;
    /**
     * <code>optional float bigTimer = 27;</code>
     */
    public boolean hasBigTimer() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float bigTimer = 27;</code>
     */
    public float getBigTimer() {
      return bigTimer_;
    }

    // optional float spawnSmallsTimer = 28;
    public static final int SPAWNSMALLSTIMER_FIELD_NUMBER = 28;
    private float spawnSmallsTimer_;
    /**
     * <code>optional float spawnSmallsTimer = 28;</code>
     */
    public boolean hasSpawnSmallsTimer() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional float spawnSmallsTimer = 28;</code>
     */
    public float getSpawnSmallsTimer() {
      return spawnSmallsTimer_;
    }

    // optional bool move = 29;
    public static final int MOVE_FIELD_NUMBER = 29;
    private boolean move_;
    /**
     * <code>optional bool move = 29;</code>
     */
    public boolean hasMove() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool move = 29;</code>
     */
    public boolean getMove() {
      return move_;
    }

    // optional bool forceJump = 30;
    public static final int FORCEJUMP_FIELD_NUMBER = 30;
    private boolean forceJump_;
    /**
     * <code>optional bool forceJump = 30;</code>
     */
    public boolean hasForceJump() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool forceJump = 30;</code>
     */
    public boolean getForceJump() {
      return forceJump_;
    }

    // optional int32 collisions = 31;
    public static final int COLLISIONS_FIELD_NUMBER = 31;
    private int collisions_;
    /**
     * <code>optional int32 collisions = 31;</code>
     */
    public boolean hasCollisions() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 collisions = 31;</code>
     */
    public int getCollisions() {
      return collisions_;
    }

    // optional float knockbackX = 32;
    public static final int KNOCKBACKX_FIELD_NUMBER = 32;
    private float knockbackX_;
    /**
     * <code>optional float knockbackX = 32;</code>
     */
    public boolean hasKnockbackX() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional float knockbackX = 32;</code>
     */
    public float getKnockbackX() {
      return knockbackX_;
    }

    // optional float knockbackY = 33;
    public static final int KNOCKBACKY_FIELD_NUMBER = 33;
    private float knockbackY_;
    /**
     * <code>optional float knockbackY = 33;</code>
     */
    public boolean hasKnockbackY() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional float knockbackY = 33;</code>
     */
    public float getKnockbackY() {
      return knockbackY_;
    }

    // required int32 id = 34;
    public static final int ID_FIELD_NUMBER = 34;
    private int id_;
    /**
     * <code>required int32 id = 34;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>required int32 id = 34;</code>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      type_ = org.cbzmq.game.enums.CharacterType.player;
      position_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
      targetPosition_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
      velocity_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
      state_ = org.cbzmq.game.enums.CharacterState.idle;
      stateTime_ = 0F;
      dir_ = 0F;
      airTime_ = 0F;
      rect_ = org.cbzmq.game.proto.CharacterProto.Rectangle.getDefaultInstance();
      stateChanged_ = false;
      hp_ = 0F;
      maxVelocityX_ = 0F;
      collisionOffsetY_ = 0F;
      jumpVelocity_ = 0F;
      damage_ = 0F;
      collisionTimer_ = 0F;
      shootTimer_ = 0F;
      hpTimer_ = 0F;
      bullets_ = java.util.Collections.emptyList();
      player_ = org.cbzmq.game.enums.CharacterType.player;
      deathTimer_ = 0F;
      maxVelocityGroundX_ = 0F;
      jumpDelayTimer_ = 0F;
      enemyType_ = org.cbzmq.game.enums.EnemyType.weak;
      size_ = 0F;
      bigTimer_ = 0F;
      spawnSmallsTimer_ = 0F;
      move_ = false;
      forceJump_ = false;
      collisions_ = 0;
      knockbackX_ = 0F;
      knockbackY_ = 0F;
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVelocity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRect()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStateChanged()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPosition().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTargetPosition()) {
        if (!getTargetPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getVelocity().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRect().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBulletsCount(); i++) {
        if (!getBullets(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, position_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, targetPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, velocity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, state_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, stateTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, dir_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, airTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, rect_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(11, stateChanged_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(12, hp_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(13, maxVelocityX_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(14, collisionOffsetY_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(15, jumpVelocity_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(16, damage_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(17, collisionTimer_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(18, shootTimer_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(19, hpTimer_);
      }
      for (int i = 0; i < bullets_.size(); i++) {
        output.writeMessage(20, bullets_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeEnum(21, player_.getNumber());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeFloat(22, deathTimer_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(23, maxVelocityGroundX_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(24, jumpDelayTimer_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeEnum(25, enemyType_.getNumber());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeFloat(26, size_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(27, bigTimer_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeFloat(28, spawnSmallsTimer_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBool(29, move_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBool(30, forceJump_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(31, collisions_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeFloat(32, knockbackX_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeFloat(33, knockbackY_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(34, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, position_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, targetPosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, velocity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, state_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, stateTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, dir_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, airTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, rect_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, stateChanged_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, hp_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, maxVelocityX_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, collisionOffsetY_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, jumpVelocity_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, damage_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, collisionTimer_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, shootTimer_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, hpTimer_);
      }
      for (int i = 0; i < bullets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, bullets_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, player_.getNumber());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, deathTimer_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, maxVelocityGroundX_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, jumpDelayTimer_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(25, enemyType_.getNumber());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(26, size_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(27, bigTimer_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(28, spawnSmallsTimer_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(29, move_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(30, forceJump_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, collisions_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(32, knockbackX_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(33, knockbackY_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Character parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.cbzmq.game.proto.CharacterProto.Character prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Character}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Character_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Character_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.cbzmq.game.proto.CharacterProto.Character.class, org.cbzmq.game.proto.CharacterProto.Character.Builder.class);
      }

      // Construct using org.cbzmq.game.proto.CharacterProto.Character.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionFieldBuilder();
          getTargetPositionFieldBuilder();
          getVelocityFieldBuilder();
          getRectFieldBuilder();
          getBulletsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.cbzmq.game.enums.CharacterType.player;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (positionBuilder_ == null) {
          position_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (targetPositionBuilder_ == null) {
          targetPosition_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
        } else {
          targetPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (velocityBuilder_ == null) {
          velocity_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = org.cbzmq.game.enums.CharacterState.idle;
        bitField0_ = (bitField0_ & ~0x00000010);
        stateTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        dir_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        airTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (rectBuilder_ == null) {
          rect_ = org.cbzmq.game.proto.CharacterProto.Rectangle.getDefaultInstance();
        } else {
          rectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        stateChanged_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        hp_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        maxVelocityX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        collisionOffsetY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        jumpVelocity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        damage_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        collisionTimer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        shootTimer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        hpTimer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (bulletsBuilder_ == null) {
          bullets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          bulletsBuilder_.clear();
        }
        player_ = org.cbzmq.game.enums.CharacterType.player;
        bitField0_ = (bitField0_ & ~0x00080000);
        deathTimer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        maxVelocityGroundX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        jumpDelayTimer_ = 0F;
        bitField0_ = (bitField0_ & ~0x00400000);
        enemyType_ = org.cbzmq.game.enums.EnemyType.weak;
        bitField0_ = (bitField0_ & ~0x00800000);
        size_ = 0F;
        bitField0_ = (bitField0_ & ~0x01000000);
        bigTimer_ = 0F;
        bitField0_ = (bitField0_ & ~0x02000000);
        spawnSmallsTimer_ = 0F;
        bitField0_ = (bitField0_ & ~0x04000000);
        move_ = false;
        bitField0_ = (bitField0_ & ~0x08000000);
        forceJump_ = false;
        bitField0_ = (bitField0_ & ~0x10000000);
        collisions_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        knockbackX_ = 0F;
        bitField0_ = (bitField0_ & ~0x40000000);
        knockbackY_ = 0F;
        bitField0_ = (bitField0_ & ~0x80000000);
        id_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Character_descriptor;
      }

      public org.cbzmq.game.proto.CharacterProto.Character getDefaultInstanceForType() {
        return org.cbzmq.game.proto.CharacterProto.Character.getDefaultInstance();
      }

      public org.cbzmq.game.proto.CharacterProto.Character build() {
        org.cbzmq.game.proto.CharacterProto.Character result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.cbzmq.game.proto.CharacterProto.Character buildPartial() {
        org.cbzmq.game.proto.CharacterProto.Character result = new org.cbzmq.game.proto.CharacterProto.Character(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (targetPositionBuilder_ == null) {
          result.targetPosition_ = targetPosition_;
        } else {
          result.targetPosition_ = targetPositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (velocityBuilder_ == null) {
          result.velocity_ = velocity_;
        } else {
          result.velocity_ = velocityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.stateTime_ = stateTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.dir_ = dir_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.airTime_ = airTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (rectBuilder_ == null) {
          result.rect_ = rect_;
        } else {
          result.rect_ = rectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.stateChanged_ = stateChanged_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.hp_ = hp_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.maxVelocityX_ = maxVelocityX_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.collisionOffsetY_ = collisionOffsetY_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.jumpVelocity_ = jumpVelocity_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.damage_ = damage_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.collisionTimer_ = collisionTimer_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.shootTimer_ = shootTimer_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.hpTimer_ = hpTimer_;
        if (bulletsBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            bullets_ = java.util.Collections.unmodifiableList(bullets_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.bullets_ = bullets_;
        } else {
          result.bullets_ = bulletsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.deathTimer_ = deathTimer_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.maxVelocityGroundX_ = maxVelocityGroundX_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.jumpDelayTimer_ = jumpDelayTimer_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.enemyType_ = enemyType_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.bigTimer_ = bigTimer_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.spawnSmallsTimer_ = spawnSmallsTimer_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.move_ = move_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.forceJump_ = forceJump_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.collisions_ = collisions_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.knockbackX_ = knockbackX_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.knockbackY_ = knockbackY_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x80000000;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.cbzmq.game.proto.CharacterProto.Character) {
          return mergeFrom((org.cbzmq.game.proto.CharacterProto.Character)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.cbzmq.game.proto.CharacterProto.Character other) {
        if (other == org.cbzmq.game.proto.CharacterProto.Character.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasTargetPosition()) {
          mergeTargetPosition(other.getTargetPosition());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasStateTime()) {
          setStateTime(other.getStateTime());
        }
        if (other.hasDir()) {
          setDir(other.getDir());
        }
        if (other.hasAirTime()) {
          setAirTime(other.getAirTime());
        }
        if (other.hasRect()) {
          mergeRect(other.getRect());
        }
        if (other.hasStateChanged()) {
          setStateChanged(other.getStateChanged());
        }
        if (other.hasHp()) {
          setHp(other.getHp());
        }
        if (other.hasMaxVelocityX()) {
          setMaxVelocityX(other.getMaxVelocityX());
        }
        if (other.hasCollisionOffsetY()) {
          setCollisionOffsetY(other.getCollisionOffsetY());
        }
        if (other.hasJumpVelocity()) {
          setJumpVelocity(other.getJumpVelocity());
        }
        if (other.hasDamage()) {
          setDamage(other.getDamage());
        }
        if (other.hasCollisionTimer()) {
          setCollisionTimer(other.getCollisionTimer());
        }
        if (other.hasShootTimer()) {
          setShootTimer(other.getShootTimer());
        }
        if (other.hasHpTimer()) {
          setHpTimer(other.getHpTimer());
        }
        if (bulletsBuilder_ == null) {
          if (!other.bullets_.isEmpty()) {
            if (bullets_.isEmpty()) {
              bullets_ = other.bullets_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureBulletsIsMutable();
              bullets_.addAll(other.bullets_);
            }
            onChanged();
          }
        } else {
          if (!other.bullets_.isEmpty()) {
            if (bulletsBuilder_.isEmpty()) {
              bulletsBuilder_.dispose();
              bulletsBuilder_ = null;
              bullets_ = other.bullets_;
              bitField0_ = (bitField0_ & ~0x00040000);
              bulletsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBulletsFieldBuilder() : null;
            } else {
              bulletsBuilder_.addAllMessages(other.bullets_);
            }
          }
        }
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasDeathTimer()) {
          setDeathTimer(other.getDeathTimer());
        }
        if (other.hasMaxVelocityGroundX()) {
          setMaxVelocityGroundX(other.getMaxVelocityGroundX());
        }
        if (other.hasJumpDelayTimer()) {
          setJumpDelayTimer(other.getJumpDelayTimer());
        }
        if (other.hasEnemyType()) {
          setEnemyType(other.getEnemyType());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasBigTimer()) {
          setBigTimer(other.getBigTimer());
        }
        if (other.hasSpawnSmallsTimer()) {
          setSpawnSmallsTimer(other.getSpawnSmallsTimer());
        }
        if (other.hasMove()) {
          setMove(other.getMove());
        }
        if (other.hasForceJump()) {
          setForceJump(other.getForceJump());
        }
        if (other.hasCollisions()) {
          setCollisions(other.getCollisions());
        }
        if (other.hasKnockbackX()) {
          setKnockbackX(other.getKnockbackX());
        }
        if (other.hasKnockbackY()) {
          setKnockbackY(other.getKnockbackY());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasVelocity()) {
          
          return false;
        }
        if (!hasState()) {
          
          return false;
        }
        if (!hasDir()) {
          
          return false;
        }
        if (!hasRect()) {
          
          return false;
        }
        if (!hasStateChanged()) {
          
          return false;
        }
        if (!hasHp()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!getPosition().isInitialized()) {
          
          return false;
        }
        if (hasTargetPosition()) {
          if (!getTargetPosition().isInitialized()) {
            
            return false;
          }
        }
        if (!getVelocity().isInitialized()) {
          
          return false;
        }
        if (!getRect().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getBulletsCount(); i++) {
          if (!getBullets(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.cbzmq.game.proto.CharacterProto.Character parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.cbzmq.game.proto.CharacterProto.Character) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // required .CharacterType type = 1;
      private org.cbzmq.game.enums.CharacterType type_ = org.cbzmq.game.enums.CharacterType.player;
      /**
       * <code>required .CharacterType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .CharacterType type = 1;</code>
       */
      public org.cbzmq.game.enums.CharacterType getType() {
        return type_;
      }
      /**
       * <code>required .CharacterType type = 1;</code>
       */
      public Builder setType(org.cbzmq.game.enums.CharacterType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .CharacterType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.cbzmq.game.enums.CharacterType.player;
        onChanged();
        return this;
      }

      // required .Vector2 position = 2;
      private org.cbzmq.game.proto.CharacterProto.Vector2 position_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder> positionBuilder_;
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public Builder setPosition(org.cbzmq.game.proto.CharacterProto.Vector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public Builder setPosition(
          org.cbzmq.game.proto.CharacterProto.Vector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public Builder mergePosition(org.cbzmq.game.proto.CharacterProto.Vector2 value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              position_ != org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance()) {
            position_ =
              org.cbzmq.game.proto.CharacterProto.Vector2.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2.Builder getPositionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }
      /**
       * <code>required .Vector2 position = 2;</code>
       *
       * <pre>
       *位置向量
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder>
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder>(
                  position_,
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      // optional .Vector2 targetPosition = 3;
      private org.cbzmq.game.proto.CharacterProto.Vector2 targetPosition_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder> targetPositionBuilder_;
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public boolean hasTargetPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2 getTargetPosition() {
        if (targetPositionBuilder_ == null) {
          return targetPosition_;
        } else {
          return targetPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public Builder setTargetPosition(org.cbzmq.game.proto.CharacterProto.Vector2 value) {
        if (targetPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetPosition_ = value;
          onChanged();
        } else {
          targetPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public Builder setTargetPosition(
          org.cbzmq.game.proto.CharacterProto.Vector2.Builder builderForValue) {
        if (targetPositionBuilder_ == null) {
          targetPosition_ = builderForValue.build();
          onChanged();
        } else {
          targetPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public Builder mergeTargetPosition(org.cbzmq.game.proto.CharacterProto.Vector2 value) {
        if (targetPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              targetPosition_ != org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance()) {
            targetPosition_ =
              org.cbzmq.game.proto.CharacterProto.Vector2.newBuilder(targetPosition_).mergeFrom(value).buildPartial();
          } else {
            targetPosition_ = value;
          }
          onChanged();
        } else {
          targetPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public Builder clearTargetPosition() {
        if (targetPositionBuilder_ == null) {
          targetPosition_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
          onChanged();
        } else {
          targetPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2.Builder getTargetPositionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTargetPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getTargetPositionOrBuilder() {
        if (targetPositionBuilder_ != null) {
          return targetPositionBuilder_.getMessageOrBuilder();
        } else {
          return targetPosition_;
        }
      }
      /**
       * <code>optional .Vector2 targetPosition = 3;</code>
       *
       * <pre>
       *目标位置向量
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder>
          getTargetPositionFieldBuilder() {
        if (targetPositionBuilder_ == null) {
          targetPositionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder>(
                  targetPosition_,
                  getParentForChildren(),
                  isClean());
          targetPosition_ = null;
        }
        return targetPositionBuilder_;
      }

      // required .Vector2 velocity = 4;
      private org.cbzmq.game.proto.CharacterProto.Vector2 velocity_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder> velocityBuilder_;
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2 getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public Builder setVelocity(org.cbzmq.game.proto.CharacterProto.Vector2 value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
          onChanged();
        } else {
          velocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public Builder setVelocity(
          org.cbzmq.game.proto.CharacterProto.Vector2.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
          onChanged();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public Builder mergeVelocity(org.cbzmq.game.proto.CharacterProto.Vector2 value) {
        if (velocityBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              velocity_ != org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance()) {
            velocity_ =
              org.cbzmq.game.proto.CharacterProto.Vector2.newBuilder(velocity_).mergeFrom(value).buildPartial();
          } else {
            velocity_ = value;
          }
          onChanged();
        } else {
          velocityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public Builder clearVelocity() {
        if (velocityBuilder_ == null) {
          velocity_ = org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
          onChanged();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2.Builder getVelocityBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_;
        }
      }
      /**
       * <code>required .Vector2 velocity = 4;</code>
       *
       * <pre>
       *速度向量
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder>
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.cbzmq.game.proto.CharacterProto.Vector2, org.cbzmq.game.proto.CharacterProto.Vector2.Builder, org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder>(
                  velocity_,
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }

      // required .CharacterState state = 5;
      private org.cbzmq.game.enums.CharacterState state_ = org.cbzmq.game.enums.CharacterState.idle;
      /**
       * <code>required .CharacterState state = 5;</code>
       *
       * <pre>
       *默认的动画状态
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .CharacterState state = 5;</code>
       *
       * <pre>
       *默认的动画状态
       * </pre>
       */
      public org.cbzmq.game.enums.CharacterState getState() {
        return state_;
      }
      /**
       * <code>required .CharacterState state = 5;</code>
       *
       * <pre>
       *默认的动画状态
       * </pre>
       */
      public Builder setState(org.cbzmq.game.enums.CharacterState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .CharacterState state = 5;</code>
       *
       * <pre>
       *默认的动画状态
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = org.cbzmq.game.enums.CharacterState.idle;
        onChanged();
        return this;
      }

      // optional float stateTime = 6;
      private float stateTime_ ;
      /**
       * <code>optional float stateTime = 6;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStateTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float stateTime = 6;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public float getStateTime() {
        return stateTime_;
      }
      /**
       * <code>optional float stateTime = 6;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStateTime(float value) {
        bitField0_ |= 0x00000020;
        stateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float stateTime = 6;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStateTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        stateTime_ = 0F;
        onChanged();
        return this;
      }

      // required float dir = 7;
      private float dir_ ;
      /**
       * <code>required float dir = 7;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public boolean hasDir() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float dir = 7;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public float getDir() {
        return dir_;
      }
      /**
       * <code>required float dir = 7;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public Builder setDir(float value) {
        bitField0_ |= 0x00000040;
        dir_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float dir = 7;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public Builder clearDir() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dir_ = 0F;
        onChanged();
        return this;
      }

      // optional float airTime = 8;
      private float airTime_ ;
      /**
       * <code>optional float airTime = 8;</code>
       *
       * <pre>
       *空中的时间
       * </pre>
       */
      public boolean hasAirTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float airTime = 8;</code>
       *
       * <pre>
       *空中的时间
       * </pre>
       */
      public float getAirTime() {
        return airTime_;
      }
      /**
       * <code>optional float airTime = 8;</code>
       *
       * <pre>
       *空中的时间
       * </pre>
       */
      public Builder setAirTime(float value) {
        bitField0_ |= 0x00000080;
        airTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float airTime = 8;</code>
       *
       * <pre>
       *空中的时间
       * </pre>
       */
      public Builder clearAirTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        airTime_ = 0F;
        onChanged();
        return this;
      }

      // required .Rectangle rect = 9;
      private org.cbzmq.game.proto.CharacterProto.Rectangle rect_ = org.cbzmq.game.proto.CharacterProto.Rectangle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Rectangle, org.cbzmq.game.proto.CharacterProto.Rectangle.Builder, org.cbzmq.game.proto.CharacterProto.RectangleOrBuilder> rectBuilder_;
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public boolean hasRect() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Rectangle getRect() {
        if (rectBuilder_ == null) {
          return rect_;
        } else {
          return rectBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public Builder setRect(org.cbzmq.game.proto.CharacterProto.Rectangle value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rect_ = value;
          onChanged();
        } else {
          rectBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public Builder setRect(
          org.cbzmq.game.proto.CharacterProto.Rectangle.Builder builderForValue) {
        if (rectBuilder_ == null) {
          rect_ = builderForValue.build();
          onChanged();
        } else {
          rectBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public Builder mergeRect(org.cbzmq.game.proto.CharacterProto.Rectangle value) {
        if (rectBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              rect_ != org.cbzmq.game.proto.CharacterProto.Rectangle.getDefaultInstance()) {
            rect_ =
              org.cbzmq.game.proto.CharacterProto.Rectangle.newBuilder(rect_).mergeFrom(value).buildPartial();
          } else {
            rect_ = value;
          }
          onChanged();
        } else {
          rectBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public Builder clearRect() {
        if (rectBuilder_ == null) {
          rect_ = org.cbzmq.game.proto.CharacterProto.Rectangle.getDefaultInstance();
          onChanged();
        } else {
          rectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.Rectangle.Builder getRectBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getRectFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      public org.cbzmq.game.proto.CharacterProto.RectangleOrBuilder getRectOrBuilder() {
        if (rectBuilder_ != null) {
          return rectBuilder_.getMessageOrBuilder();
        } else {
          return rect_;
        }
      }
      /**
       * <code>required .Rectangle rect = 9;</code>
       *
       * <pre>
       *角色的矩阵
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Rectangle, org.cbzmq.game.proto.CharacterProto.Rectangle.Builder, org.cbzmq.game.proto.CharacterProto.RectangleOrBuilder>
          getRectFieldBuilder() {
        if (rectBuilder_ == null) {
          rectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.cbzmq.game.proto.CharacterProto.Rectangle, org.cbzmq.game.proto.CharacterProto.Rectangle.Builder, org.cbzmq.game.proto.CharacterProto.RectangleOrBuilder>(
                  rect_,
                  getParentForChildren(),
                  isClean());
          rect_ = null;
        }
        return rectBuilder_;
      }

      // required bool stateChanged = 11;
      private boolean stateChanged_ ;
      /**
       * <code>required bool stateChanged = 11;</code>
       *
       * <pre>
       *是否状态改变
       * </pre>
       */
      public boolean hasStateChanged() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required bool stateChanged = 11;</code>
       *
       * <pre>
       *是否状态改变
       * </pre>
       */
      public boolean getStateChanged() {
        return stateChanged_;
      }
      /**
       * <code>required bool stateChanged = 11;</code>
       *
       * <pre>
       *是否状态改变
       * </pre>
       */
      public Builder setStateChanged(boolean value) {
        bitField0_ |= 0x00000200;
        stateChanged_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool stateChanged = 11;</code>
       *
       * <pre>
       *是否状态改变
       * </pre>
       */
      public Builder clearStateChanged() {
        bitField0_ = (bitField0_ & ~0x00000200);
        stateChanged_ = false;
        onChanged();
        return this;
      }

      // required float hp = 12;
      private float hp_ ;
      /**
       * <code>required float hp = 12;</code>
       *
       * <pre>
       *雪条
       * </pre>
       */
      public boolean hasHp() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required float hp = 12;</code>
       *
       * <pre>
       *雪条
       * </pre>
       */
      public float getHp() {
        return hp_;
      }
      /**
       * <code>required float hp = 12;</code>
       *
       * <pre>
       *雪条
       * </pre>
       */
      public Builder setHp(float value) {
        bitField0_ |= 0x00000400;
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float hp = 12;</code>
       *
       * <pre>
       *雪条
       * </pre>
       */
      public Builder clearHp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        hp_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxVelocityX = 13;
      private float maxVelocityX_ ;
      /**
       * <code>optional float maxVelocityX = 13;</code>
       *
       * <pre>
       *最大x方向上的位移
       * </pre>
       */
      public boolean hasMaxVelocityX() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float maxVelocityX = 13;</code>
       *
       * <pre>
       *最大x方向上的位移
       * </pre>
       */
      public float getMaxVelocityX() {
        return maxVelocityX_;
      }
      /**
       * <code>optional float maxVelocityX = 13;</code>
       *
       * <pre>
       *最大x方向上的位移
       * </pre>
       */
      public Builder setMaxVelocityX(float value) {
        bitField0_ |= 0x00000800;
        maxVelocityX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxVelocityX = 13;</code>
       *
       * <pre>
       *最大x方向上的位移
       * </pre>
       */
      public Builder clearMaxVelocityX() {
        bitField0_ = (bitField0_ & ~0x00000800);
        maxVelocityX_ = 0F;
        onChanged();
        return this;
      }

      // optional float collisionOffsetY = 14;
      private float collisionOffsetY_ ;
      /**
       * <code>optional float collisionOffsetY = 14;</code>
       *
       * <pre>
       *碰撞Y的偏移量
       * </pre>
       */
      public boolean hasCollisionOffsetY() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float collisionOffsetY = 14;</code>
       *
       * <pre>
       *碰撞Y的偏移量
       * </pre>
       */
      public float getCollisionOffsetY() {
        return collisionOffsetY_;
      }
      /**
       * <code>optional float collisionOffsetY = 14;</code>
       *
       * <pre>
       *碰撞Y的偏移量
       * </pre>
       */
      public Builder setCollisionOffsetY(float value) {
        bitField0_ |= 0x00001000;
        collisionOffsetY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float collisionOffsetY = 14;</code>
       *
       * <pre>
       *碰撞Y的偏移量
       * </pre>
       */
      public Builder clearCollisionOffsetY() {
        bitField0_ = (bitField0_ & ~0x00001000);
        collisionOffsetY_ = 0F;
        onChanged();
        return this;
      }

      // optional float jumpVelocity = 15;
      private float jumpVelocity_ ;
      /**
       * <code>optional float jumpVelocity = 15;</code>
       *
       * <pre>
       *跳的速度在Y上
       * </pre>
       */
      public boolean hasJumpVelocity() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float jumpVelocity = 15;</code>
       *
       * <pre>
       *跳的速度在Y上
       * </pre>
       */
      public float getJumpVelocity() {
        return jumpVelocity_;
      }
      /**
       * <code>optional float jumpVelocity = 15;</code>
       *
       * <pre>
       *跳的速度在Y上
       * </pre>
       */
      public Builder setJumpVelocity(float value) {
        bitField0_ |= 0x00002000;
        jumpVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float jumpVelocity = 15;</code>
       *
       * <pre>
       *跳的速度在Y上
       * </pre>
       */
      public Builder clearJumpVelocity() {
        bitField0_ = (bitField0_ & ~0x00002000);
        jumpVelocity_ = 0F;
        onChanged();
        return this;
      }

      // optional float damage = 16;
      private float damage_ ;
      /**
       * <code>optional float damage = 16;</code>
       *
       * <pre>
       *伤害
       * </pre>
       */
      public boolean hasDamage() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float damage = 16;</code>
       *
       * <pre>
       *伤害
       * </pre>
       */
      public float getDamage() {
        return damage_;
      }
      /**
       * <code>optional float damage = 16;</code>
       *
       * <pre>
       *伤害
       * </pre>
       */
      public Builder setDamage(float value) {
        bitField0_ |= 0x00004000;
        damage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float damage = 16;</code>
       *
       * <pre>
       *伤害
       * </pre>
       */
      public Builder clearDamage() {
        bitField0_ = (bitField0_ & ~0x00004000);
        damage_ = 0F;
        onChanged();
        return this;
      }

      // optional float collisionTimer = 17;
      private float collisionTimer_ ;
      /**
       * <code>optional float collisionTimer = 17;</code>
       *
       * <pre>
       *控制碰撞时的无敌时间和闪烁
       * </pre>
       */
      public boolean hasCollisionTimer() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float collisionTimer = 17;</code>
       *
       * <pre>
       *控制碰撞时的无敌时间和闪烁
       * </pre>
       */
      public float getCollisionTimer() {
        return collisionTimer_;
      }
      /**
       * <code>optional float collisionTimer = 17;</code>
       *
       * <pre>
       *控制碰撞时的无敌时间和闪烁
       * </pre>
       */
      public Builder setCollisionTimer(float value) {
        bitField0_ |= 0x00008000;
        collisionTimer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float collisionTimer = 17;</code>
       *
       * <pre>
       *控制碰撞时的无敌时间和闪烁
       * </pre>
       */
      public Builder clearCollisionTimer() {
        bitField0_ = (bitField0_ & ~0x00008000);
        collisionTimer_ = 0F;
        onChanged();
        return this;
      }

      // optional float shootTimer = 18;
      private float shootTimer_ ;
      /**
       * <code>optional float shootTimer = 18;</code>
       *
       * <pre>
       *计时器
       *通过timer控制射击的时间间隔
       * </pre>
       */
      public boolean hasShootTimer() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float shootTimer = 18;</code>
       *
       * <pre>
       *计时器
       *通过timer控制射击的时间间隔
       * </pre>
       */
      public float getShootTimer() {
        return shootTimer_;
      }
      /**
       * <code>optional float shootTimer = 18;</code>
       *
       * <pre>
       *计时器
       *通过timer控制射击的时间间隔
       * </pre>
       */
      public Builder setShootTimer(float value) {
        bitField0_ |= 0x00010000;
        shootTimer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float shootTimer = 18;</code>
       *
       * <pre>
       *计时器
       *通过timer控制射击的时间间隔
       * </pre>
       */
      public Builder clearShootTimer() {
        bitField0_ = (bitField0_ & ~0x00010000);
        shootTimer_ = 0F;
        onChanged();
        return this;
      }

      // optional float hpTimer = 19;
      private float hpTimer_ ;
      /**
       * <code>optional float hpTimer = 19;</code>
       *
       * <pre>
       *控制回血时间
       * </pre>
       */
      public boolean hasHpTimer() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional float hpTimer = 19;</code>
       *
       * <pre>
       *控制回血时间
       * </pre>
       */
      public float getHpTimer() {
        return hpTimer_;
      }
      /**
       * <code>optional float hpTimer = 19;</code>
       *
       * <pre>
       *控制回血时间
       * </pre>
       */
      public Builder setHpTimer(float value) {
        bitField0_ |= 0x00020000;
        hpTimer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float hpTimer = 19;</code>
       *
       * <pre>
       *控制回血时间
       * </pre>
       */
      public Builder clearHpTimer() {
        bitField0_ = (bitField0_ & ~0x00020000);
        hpTimer_ = 0F;
        onChanged();
        return this;
      }

      // repeated .Character bullets = 20;
      private java.util.List<org.cbzmq.game.proto.CharacterProto.Character> bullets_ =
        java.util.Collections.emptyList();
      private void ensureBulletsIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          bullets_ = new java.util.ArrayList<org.cbzmq.game.proto.CharacterProto.Character>(bullets_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Character, org.cbzmq.game.proto.CharacterProto.Character.Builder, org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder> bulletsBuilder_;

      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public java.util.List<org.cbzmq.game.proto.CharacterProto.Character> getBulletsList() {
        if (bulletsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bullets_);
        } else {
          return bulletsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public int getBulletsCount() {
        if (bulletsBuilder_ == null) {
          return bullets_.size();
        } else {
          return bulletsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public org.cbzmq.game.proto.CharacterProto.Character getBullets(int index) {
        if (bulletsBuilder_ == null) {
          return bullets_.get(index);
        } else {
          return bulletsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder setBullets(
          int index, org.cbzmq.game.proto.CharacterProto.Character value) {
        if (bulletsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBulletsIsMutable();
          bullets_.set(index, value);
          onChanged();
        } else {
          bulletsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder setBullets(
          int index, org.cbzmq.game.proto.CharacterProto.Character.Builder builderForValue) {
        if (bulletsBuilder_ == null) {
          ensureBulletsIsMutable();
          bullets_.set(index, builderForValue.build());
          onChanged();
        } else {
          bulletsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder addBullets(org.cbzmq.game.proto.CharacterProto.Character value) {
        if (bulletsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBulletsIsMutable();
          bullets_.add(value);
          onChanged();
        } else {
          bulletsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder addBullets(
          int index, org.cbzmq.game.proto.CharacterProto.Character value) {
        if (bulletsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBulletsIsMutable();
          bullets_.add(index, value);
          onChanged();
        } else {
          bulletsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder addBullets(
          org.cbzmq.game.proto.CharacterProto.Character.Builder builderForValue) {
        if (bulletsBuilder_ == null) {
          ensureBulletsIsMutable();
          bullets_.add(builderForValue.build());
          onChanged();
        } else {
          bulletsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder addBullets(
          int index, org.cbzmq.game.proto.CharacterProto.Character.Builder builderForValue) {
        if (bulletsBuilder_ == null) {
          ensureBulletsIsMutable();
          bullets_.add(index, builderForValue.build());
          onChanged();
        } else {
          bulletsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder addAllBullets(
          java.lang.Iterable<? extends org.cbzmq.game.proto.CharacterProto.Character> values) {
        if (bulletsBuilder_ == null) {
          ensureBulletsIsMutable();
          super.addAll(values, bullets_);
          onChanged();
        } else {
          bulletsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder clearBullets() {
        if (bulletsBuilder_ == null) {
          bullets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          bulletsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public Builder removeBullets(int index) {
        if (bulletsBuilder_ == null) {
          ensureBulletsIsMutable();
          bullets_.remove(index);
          onChanged();
        } else {
          bulletsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public org.cbzmq.game.proto.CharacterProto.Character.Builder getBulletsBuilder(
          int index) {
        return getBulletsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder getBulletsOrBuilder(
          int index) {
        if (bulletsBuilder_ == null) {
          return bullets_.get(index);  } else {
          return bulletsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public java.util.List<? extends org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder>
           getBulletsOrBuilderList() {
        if (bulletsBuilder_ != null) {
          return bulletsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bullets_);
        }
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public org.cbzmq.game.proto.CharacterProto.Character.Builder addBulletsBuilder() {
        return getBulletsFieldBuilder().addBuilder(
            org.cbzmq.game.proto.CharacterProto.Character.getDefaultInstance());
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public org.cbzmq.game.proto.CharacterProto.Character.Builder addBulletsBuilder(
          int index) {
        return getBulletsFieldBuilder().addBuilder(
            index, org.cbzmq.game.proto.CharacterProto.Character.getDefaultInstance());
      }
      /**
       * <code>repeated .Character bullets = 20;</code>
       */
      public java.util.List<org.cbzmq.game.proto.CharacterProto.Character.Builder>
           getBulletsBuilderList() {
        return getBulletsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.cbzmq.game.proto.CharacterProto.Character, org.cbzmq.game.proto.CharacterProto.Character.Builder, org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder>
          getBulletsFieldBuilder() {
        if (bulletsBuilder_ == null) {
          bulletsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.cbzmq.game.proto.CharacterProto.Character, org.cbzmq.game.proto.CharacterProto.Character.Builder, org.cbzmq.game.proto.CharacterProto.CharacterOrBuilder>(
                  bullets_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          bullets_ = null;
        }
        return bulletsBuilder_;
      }

      // optional .CharacterType player = 21;
      private org.cbzmq.game.enums.CharacterType player_ = org.cbzmq.game.enums.CharacterType.player;
      /**
       * <code>optional .CharacterType player = 21;</code>
       *
       * <pre>
       ** Bullet 相关参数 
       * </pre>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .CharacterType player = 21;</code>
       *
       * <pre>
       ** Bullet 相关参数 
       * </pre>
       */
      public org.cbzmq.game.enums.CharacterType getPlayer() {
        return player_;
      }
      /**
       * <code>optional .CharacterType player = 21;</code>
       *
       * <pre>
       ** Bullet 相关参数 
       * </pre>
       */
      public Builder setPlayer(org.cbzmq.game.enums.CharacterType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CharacterType player = 21;</code>
       *
       * <pre>
       ** Bullet 相关参数 
       * </pre>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00080000);
        player_ = org.cbzmq.game.enums.CharacterType.player;
        onChanged();
        return this;
      }

      // optional float deathTimer = 22;
      private float deathTimer_ ;
      /**
       * <code>optional float deathTimer = 22;</code>
       */
      public boolean hasDeathTimer() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional float deathTimer = 22;</code>
       */
      public float getDeathTimer() {
        return deathTimer_;
      }
      /**
       * <code>optional float deathTimer = 22;</code>
       */
      public Builder setDeathTimer(float value) {
        bitField0_ |= 0x00100000;
        deathTimer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float deathTimer = 22;</code>
       */
      public Builder clearDeathTimer() {
        bitField0_ = (bitField0_ & ~0x00100000);
        deathTimer_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxVelocityGroundX = 23;
      private float maxVelocityGroundX_ ;
      /**
       * <code>optional float maxVelocityGroundX = 23;</code>
       */
      public boolean hasMaxVelocityGroundX() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float maxVelocityGroundX = 23;</code>
       */
      public float getMaxVelocityGroundX() {
        return maxVelocityGroundX_;
      }
      /**
       * <code>optional float maxVelocityGroundX = 23;</code>
       */
      public Builder setMaxVelocityGroundX(float value) {
        bitField0_ |= 0x00200000;
        maxVelocityGroundX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxVelocityGroundX = 23;</code>
       */
      public Builder clearMaxVelocityGroundX() {
        bitField0_ = (bitField0_ & ~0x00200000);
        maxVelocityGroundX_ = 0F;
        onChanged();
        return this;
      }

      // optional float jumpDelayTimer = 24;
      private float jumpDelayTimer_ ;
      /**
       * <code>optional float jumpDelayTimer = 24;</code>
       */
      public boolean hasJumpDelayTimer() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional float jumpDelayTimer = 24;</code>
       */
      public float getJumpDelayTimer() {
        return jumpDelayTimer_;
      }
      /**
       * <code>optional float jumpDelayTimer = 24;</code>
       */
      public Builder setJumpDelayTimer(float value) {
        bitField0_ |= 0x00400000;
        jumpDelayTimer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float jumpDelayTimer = 24;</code>
       */
      public Builder clearJumpDelayTimer() {
        bitField0_ = (bitField0_ & ~0x00400000);
        jumpDelayTimer_ = 0F;
        onChanged();
        return this;
      }

      // optional .EnemyType enemyType = 25;
      private org.cbzmq.game.enums.EnemyType enemyType_ = org.cbzmq.game.enums.EnemyType.weak;
      /**
       * <code>optional .EnemyType enemyType = 25;</code>
       */
      public boolean hasEnemyType() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .EnemyType enemyType = 25;</code>
       */
      public org.cbzmq.game.enums.EnemyType getEnemyType() {
        return enemyType_;
      }
      /**
       * <code>optional .EnemyType enemyType = 25;</code>
       */
      public Builder setEnemyType(org.cbzmq.game.enums.EnemyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00800000;
        enemyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EnemyType enemyType = 25;</code>
       */
      public Builder clearEnemyType() {
        bitField0_ = (bitField0_ & ~0x00800000);
        enemyType_ = org.cbzmq.game.enums.EnemyType.weak;
        onChanged();
        return this;
      }

      // optional float size = 26;
      private float size_ ;
      /**
       * <code>optional float size = 26;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float size = 26;</code>
       */
      public float getSize() {
        return size_;
      }
      /**
       * <code>optional float size = 26;</code>
       */
      public Builder setSize(float value) {
        bitField0_ |= 0x01000000;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float size = 26;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x01000000);
        size_ = 0F;
        onChanged();
        return this;
      }

      // optional float bigTimer = 27;
      private float bigTimer_ ;
      /**
       * <code>optional float bigTimer = 27;</code>
       */
      public boolean hasBigTimer() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional float bigTimer = 27;</code>
       */
      public float getBigTimer() {
        return bigTimer_;
      }
      /**
       * <code>optional float bigTimer = 27;</code>
       */
      public Builder setBigTimer(float value) {
        bitField0_ |= 0x02000000;
        bigTimer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float bigTimer = 27;</code>
       */
      public Builder clearBigTimer() {
        bitField0_ = (bitField0_ & ~0x02000000);
        bigTimer_ = 0F;
        onChanged();
        return this;
      }

      // optional float spawnSmallsTimer = 28;
      private float spawnSmallsTimer_ ;
      /**
       * <code>optional float spawnSmallsTimer = 28;</code>
       */
      public boolean hasSpawnSmallsTimer() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional float spawnSmallsTimer = 28;</code>
       */
      public float getSpawnSmallsTimer() {
        return spawnSmallsTimer_;
      }
      /**
       * <code>optional float spawnSmallsTimer = 28;</code>
       */
      public Builder setSpawnSmallsTimer(float value) {
        bitField0_ |= 0x04000000;
        spawnSmallsTimer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float spawnSmallsTimer = 28;</code>
       */
      public Builder clearSpawnSmallsTimer() {
        bitField0_ = (bitField0_ & ~0x04000000);
        spawnSmallsTimer_ = 0F;
        onChanged();
        return this;
      }

      // optional bool move = 29;
      private boolean move_ ;
      /**
       * <code>optional bool move = 29;</code>
       */
      public boolean hasMove() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool move = 29;</code>
       */
      public boolean getMove() {
        return move_;
      }
      /**
       * <code>optional bool move = 29;</code>
       */
      public Builder setMove(boolean value) {
        bitField0_ |= 0x08000000;
        move_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool move = 29;</code>
       */
      public Builder clearMove() {
        bitField0_ = (bitField0_ & ~0x08000000);
        move_ = false;
        onChanged();
        return this;
      }

      // optional bool forceJump = 30;
      private boolean forceJump_ ;
      /**
       * <code>optional bool forceJump = 30;</code>
       */
      public boolean hasForceJump() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool forceJump = 30;</code>
       */
      public boolean getForceJump() {
        return forceJump_;
      }
      /**
       * <code>optional bool forceJump = 30;</code>
       */
      public Builder setForceJump(boolean value) {
        bitField0_ |= 0x10000000;
        forceJump_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool forceJump = 30;</code>
       */
      public Builder clearForceJump() {
        bitField0_ = (bitField0_ & ~0x10000000);
        forceJump_ = false;
        onChanged();
        return this;
      }

      // optional int32 collisions = 31;
      private int collisions_ ;
      /**
       * <code>optional int32 collisions = 31;</code>
       */
      public boolean hasCollisions() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 collisions = 31;</code>
       */
      public int getCollisions() {
        return collisions_;
      }
      /**
       * <code>optional int32 collisions = 31;</code>
       */
      public Builder setCollisions(int value) {
        bitField0_ |= 0x20000000;
        collisions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 collisions = 31;</code>
       */
      public Builder clearCollisions() {
        bitField0_ = (bitField0_ & ~0x20000000);
        collisions_ = 0;
        onChanged();
        return this;
      }

      // optional float knockbackX = 32;
      private float knockbackX_ ;
      /**
       * <code>optional float knockbackX = 32;</code>
       */
      public boolean hasKnockbackX() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional float knockbackX = 32;</code>
       */
      public float getKnockbackX() {
        return knockbackX_;
      }
      /**
       * <code>optional float knockbackX = 32;</code>
       */
      public Builder setKnockbackX(float value) {
        bitField0_ |= 0x40000000;
        knockbackX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float knockbackX = 32;</code>
       */
      public Builder clearKnockbackX() {
        bitField0_ = (bitField0_ & ~0x40000000);
        knockbackX_ = 0F;
        onChanged();
        return this;
      }

      // optional float knockbackY = 33;
      private float knockbackY_ ;
      /**
       * <code>optional float knockbackY = 33;</code>
       */
      public boolean hasKnockbackY() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional float knockbackY = 33;</code>
       */
      public float getKnockbackY() {
        return knockbackY_;
      }
      /**
       * <code>optional float knockbackY = 33;</code>
       */
      public Builder setKnockbackY(float value) {
        bitField0_ |= 0x80000000;
        knockbackY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float knockbackY = 33;</code>
       */
      public Builder clearKnockbackY() {
        bitField0_ = (bitField0_ & ~0x80000000);
        knockbackY_ = 0F;
        onChanged();
        return this;
      }

      // required int32 id = 34;
      private int id_ ;
      /**
       * <code>required int32 id = 34;</code>
       */
      public boolean hasId() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 34;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 34;</code>
       */
      public Builder setId(int value) {
        bitField1_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 34;</code>
       */
      public Builder clearId() {
        bitField1_ = (bitField1_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Character)
    }

    static {
      defaultInstance = new Character(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Character)
  }

  public interface Vector2OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required float x = 1;
    /**
     * <code>required float x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required float x = 1;</code>
     */
    float getX();

    // required float y = 2;
    /**
     * <code>required float y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required float y = 2;</code>
     */
    float getY();
  }
  /**
   * Protobuf type {@code Vector2}
   */
  public static final class Vector2 extends
      com.google.protobuf.GeneratedMessage
      implements Vector2OrBuilder {
    // Use Vector2.newBuilder() to construct.
    private Vector2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vector2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vector2 defaultInstance;
    public static Vector2 getDefaultInstance() {
      return defaultInstance;
    }

    public Vector2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vector2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.cbzmq.game.proto.CharacterProto.internal_static_Vector2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.cbzmq.game.proto.CharacterProto.internal_static_Vector2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.cbzmq.game.proto.CharacterProto.Vector2.class, org.cbzmq.game.proto.CharacterProto.Vector2.Builder.class);
    }

    public static com.google.protobuf.Parser<Vector2> PARSER =
        new com.google.protobuf.AbstractParser<Vector2>() {
      public Vector2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vector2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>required float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>required float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    private void initFields() {
      x_ = 0F;
      y_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Vector2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.cbzmq.game.proto.CharacterProto.Vector2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Vector2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.cbzmq.game.proto.CharacterProto.Vector2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Vector2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Vector2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.cbzmq.game.proto.CharacterProto.Vector2.class, org.cbzmq.game.proto.CharacterProto.Vector2.Builder.class);
      }

      // Construct using org.cbzmq.game.proto.CharacterProto.Vector2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Vector2_descriptor;
      }

      public org.cbzmq.game.proto.CharacterProto.Vector2 getDefaultInstanceForType() {
        return org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance();
      }

      public org.cbzmq.game.proto.CharacterProto.Vector2 build() {
        org.cbzmq.game.proto.CharacterProto.Vector2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.cbzmq.game.proto.CharacterProto.Vector2 buildPartial() {
        org.cbzmq.game.proto.CharacterProto.Vector2 result = new org.cbzmq.game.proto.CharacterProto.Vector2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.cbzmq.game.proto.CharacterProto.Vector2) {
          return mergeFrom((org.cbzmq.game.proto.CharacterProto.Vector2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.cbzmq.game.proto.CharacterProto.Vector2 other) {
        if (other == org.cbzmq.game.proto.CharacterProto.Vector2.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.cbzmq.game.proto.CharacterProto.Vector2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.cbzmq.game.proto.CharacterProto.Vector2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required float x = 1;
      private float x_ ;
      /**
       * <code>required float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>required float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      // required float y = 2;
      private float y_ ;
      /**
       * <code>required float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>required float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Vector2)
    }

    static {
      defaultInstance = new Vector2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Vector2)
  }

  public interface RectangleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required float x = 1;
    /**
     * <code>required float x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required float x = 1;</code>
     */
    float getX();

    // required float y = 2;
    /**
     * <code>required float y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required float y = 2;</code>
     */
    float getY();

    // required float width = 3;
    /**
     * <code>required float width = 3;</code>
     */
    boolean hasWidth();
    /**
     * <code>required float width = 3;</code>
     */
    float getWidth();

    // required float height = 4;
    /**
     * <code>required float height = 4;</code>
     */
    boolean hasHeight();
    /**
     * <code>required float height = 4;</code>
     */
    float getHeight();
  }
  /**
   * Protobuf type {@code Rectangle}
   */
  public static final class Rectangle extends
      com.google.protobuf.GeneratedMessage
      implements RectangleOrBuilder {
    // Use Rectangle.newBuilder() to construct.
    private Rectangle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Rectangle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Rectangle defaultInstance;
    public static Rectangle getDefaultInstance() {
      return defaultInstance;
    }

    public Rectangle getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Rectangle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              width_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              height_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.cbzmq.game.proto.CharacterProto.internal_static_Rectangle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.cbzmq.game.proto.CharacterProto.internal_static_Rectangle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.cbzmq.game.proto.CharacterProto.Rectangle.class, org.cbzmq.game.proto.CharacterProto.Rectangle.Builder.class);
    }

    public static com.google.protobuf.Parser<Rectangle> PARSER =
        new com.google.protobuf.AbstractParser<Rectangle>() {
      public Rectangle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rectangle(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Rectangle> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>required float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>required float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    // required float width = 3;
    public static final int WIDTH_FIELD_NUMBER = 3;
    private float width_;
    /**
     * <code>required float width = 3;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float width = 3;</code>
     */
    public float getWidth() {
      return width_;
    }

    // required float height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private float height_;
    /**
     * <code>required float height = 4;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float height = 4;</code>
     */
    public float getHeight() {
      return height_;
    }

    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      width_ = 0F;
      height_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, height_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, height_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.cbzmq.game.proto.CharacterProto.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.cbzmq.game.proto.CharacterProto.Rectangle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Rectangle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.cbzmq.game.proto.CharacterProto.RectangleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Rectangle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Rectangle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.cbzmq.game.proto.CharacterProto.Rectangle.class, org.cbzmq.game.proto.CharacterProto.Rectangle.Builder.class);
      }

      // Construct using org.cbzmq.game.proto.CharacterProto.Rectangle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.cbzmq.game.proto.CharacterProto.internal_static_Rectangle_descriptor;
      }

      public org.cbzmq.game.proto.CharacterProto.Rectangle getDefaultInstanceForType() {
        return org.cbzmq.game.proto.CharacterProto.Rectangle.getDefaultInstance();
      }

      public org.cbzmq.game.proto.CharacterProto.Rectangle build() {
        org.cbzmq.game.proto.CharacterProto.Rectangle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.cbzmq.game.proto.CharacterProto.Rectangle buildPartial() {
        org.cbzmq.game.proto.CharacterProto.Rectangle result = new org.cbzmq.game.proto.CharacterProto.Rectangle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.cbzmq.game.proto.CharacterProto.Rectangle) {
          return mergeFrom((org.cbzmq.game.proto.CharacterProto.Rectangle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.cbzmq.game.proto.CharacterProto.Rectangle other) {
        if (other == org.cbzmq.game.proto.CharacterProto.Rectangle.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.cbzmq.game.proto.CharacterProto.Rectangle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.cbzmq.game.proto.CharacterProto.Rectangle) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required float x = 1;
      private float x_ ;
      /**
       * <code>required float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>required float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      // required float y = 2;
      private float y_ ;
      /**
       * <code>required float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>required float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      // required float width = 3;
      private float width_ ;
      /**
       * <code>required float width = 3;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float width = 3;</code>
       */
      public float getWidth() {
        return width_;
      }
      /**
       * <code>required float width = 3;</code>
       */
      public Builder setWidth(float value) {
        bitField0_ |= 0x00000004;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float width = 3;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0F;
        onChanged();
        return this;
      }

      // required float height = 4;
      private float height_ ;
      /**
       * <code>required float height = 4;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float height = 4;</code>
       */
      public float getHeight() {
        return height_;
      }
      /**
       * <code>required float height = 4;</code>
       */
      public Builder setHeight(float value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float height = 4;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Rectangle)
    }

    static {
      defaultInstance = new Rectangle(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Rectangle)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Character_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Character_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Vector2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Vector2_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Rectangle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Rectangle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024avro/character.proto\032\020avro/enums.proto" +
      "\"\352\005\n\tCharacter\022\034\n\004type\030\001 \002(\0162\016.Character" +
      "Type\022\032\n\010position\030\002 \002(\0132\010.Vector2\022 \n\016targ" +
      "etPosition\030\003 \001(\0132\010.Vector2\022\032\n\010velocity\030\004" +
      " \002(\0132\010.Vector2\022\036\n\005state\030\005 \002(\0162\017.Characte" +
      "rState\022\021\n\tstateTime\030\006 \001(\002\022\013\n\003dir\030\007 \002(\002\022\017" +
      "\n\007airTime\030\010 \001(\002\022\030\n\004rect\030\t \002(\0132\n.Rectangl" +
      "e\022\024\n\014stateChanged\030\013 \002(\010\022\n\n\002hp\030\014 \002(\002\022\024\n\014m" +
      "axVelocityX\030\r \001(\002\022\030\n\020collisionOffsetY\030\016 " +
      "\001(\002\022\024\n\014jumpVelocity\030\017 \001(\002\022\016\n\006damage\030\020 \001(",
      "\002\022\026\n\016collisionTimer\030\021 \001(\002\022\022\n\nshootTimer\030" +
      "\022 \001(\002\022\017\n\007hpTimer\030\023 \001(\002\022\033\n\007bullets\030\024 \003(\0132" +
      "\n.Character\022\036\n\006player\030\025 \001(\0162\016.CharacterT" +
      "ype\022\022\n\ndeathTimer\030\026 \001(\002\022\032\n\022maxVelocityGr" +
      "oundX\030\027 \001(\002\022\026\n\016jumpDelayTimer\030\030 \001(\002\022\035\n\te" +
      "nemyType\030\031 \001(\0162\n.EnemyType\022\014\n\004size\030\032 \001(\002" +
      "\022\020\n\010bigTimer\030\033 \001(\002\022\030\n\020spawnSmallsTimer\030\034" +
      " \001(\002\022\014\n\004move\030\035 \001(\010\022\021\n\tforceJump\030\036 \001(\010\022\022\n" +
      "\ncollisions\030\037 \001(\005\022\022\n\nknockbackX\030  \001(\002\022\022\n" +
      "\nknockbackY\030! \001(\002\022\n\n\002id\030\" \002(\005\"\037\n\007Vector2",
      "\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\"@\n\tRectangle\022\t\n\001x" +
      "\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\r\n\005width\030\003 \002(\002\022\016\n\006heig" +
      "ht\030\004 \002(\002B(\n\024org.cbzmq.game.protoB\016Charac" +
      "terProtoP\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Character_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Character_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Character_descriptor,
              new java.lang.String[] { "Type", "Position", "TargetPosition", "Velocity", "State", "StateTime", "Dir", "AirTime", "Rect", "StateChanged", "Hp", "MaxVelocityX", "CollisionOffsetY", "JumpVelocity", "Damage", "CollisionTimer", "ShootTimer", "HpTimer", "Bullets", "Player", "DeathTimer", "MaxVelocityGroundX", "JumpDelayTimer", "EnemyType", "Size", "BigTimer", "SpawnSmallsTimer", "Move", "ForceJump", "Collisions", "KnockbackX", "KnockbackY", "Id", });
          internal_static_Vector2_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Vector2_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Vector2_descriptor,
              new java.lang.String[] { "X", "Y", });
          internal_static_Rectangle_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Rectangle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Rectangle_descriptor,
              new java.lang.String[] { "X", "Y", "Width", "Height", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.cbzmq.game.enums.Enums.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
