// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Command.proto

package awt.proto.command;

/**
 * Protobuf type {@code Command}
 */
public  final class Command extends
    com.google.protobuf.GeneratedMessage
    implements CommandOrBuilder {
  // Use Command.newBuilder() to construct.
  private Command(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private Command(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final Command defaultInstance;
  public static Command getDefaultInstance() {
    return defaultInstance;
  }

  public Command getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private Command(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();
            awt.proto.enums.CommandType value = awt.proto.enums.CommandType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              commandType_ = value;
            }
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            elementId_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            startTimestamp_ = input.readInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            endTimestamp_ = input.readInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            count_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            needCount_ = input.readInt32();
            break;
          }
          case 56: {
            int rawValue = input.readEnum();
            awt.proto.enums.Status value = awt.proto.enums.Status.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(7, rawValue);
            } else {
              bitField0_ |= 0x00000040;
              status_ = value;
            }
            break;
          }
          case 64: {
            int rawValue = input.readEnum();
            awt.proto.enums.ElementAction value = awt.proto.enums.ElementAction.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(8, rawValue);
            } else {
              bitField0_ |= 0x00000080;
              elementAction_ = value;
            }
            break;
          }
          case 72: {
            int rawValue = input.readEnum();
            awt.proto.enums.TankAction value = awt.proto.enums.TankAction.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(9, rawValue);
            } else {
              bitField0_ |= 0x00000100;
              tankAction_ = value;
            }
            break;
          }
          case 80: {
            int rawValue = input.readEnum();
            awt.proto.enums.Direct value = awt.proto.enums.Direct.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(10, rawValue);
            } else {
              bitField0_ |= 0x00000200;
              direct_ = value;
            }
            break;
          }
          case 88: {
            bitField0_ |= 0x00000400;
            newData_ = input.readInt32();
            break;
          }
          case 96: {
            int rawValue = input.readEnum();
            awt.proto.enums.MsgAction value = awt.proto.enums.MsgAction.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(12, rawValue);
            } else {
              bitField0_ |= 0x00000800;
              msgAction_ = value;
            }
            break;
          }
          case 104: {
            bitField0_ |= 0x00001000;
            playerId_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return awt.proto.command.CommandProto.internal_static_Command_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return awt.proto.command.CommandProto.internal_static_Command_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            awt.proto.command.Command.class, awt.proto.command.Command.Builder.class);
  }

  public static com.google.protobuf.Parser<Command> PARSER =
      new com.google.protobuf.AbstractParser<Command>() {
    public Command parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Command(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<Command> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  // required .CommandType commandType = 1;
  public static final int COMMANDTYPE_FIELD_NUMBER = 1;
  private awt.proto.enums.CommandType commandType_;
  /**
   * <code>required .CommandType commandType = 1;</code>
   *
   * <pre>
   *元素id
   * </pre>
   */
  public boolean hasCommandType() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .CommandType commandType = 1;</code>
   *
   * <pre>
   *元素id
   * </pre>
   */
  public awt.proto.enums.CommandType getCommandType() {
    return commandType_;
  }

  // optional int32 elementId = 2;
  public static final int ELEMENTID_FIELD_NUMBER = 2;
  private int elementId_;
  /**
   * <code>optional int32 elementId = 2;</code>
   *
   * <pre>
   *元素id
   * </pre>
   */
  public boolean hasElementId() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional int32 elementId = 2;</code>
   *
   * <pre>
   *元素id
   * </pre>
   */
  public int getElementId() {
    return elementId_;
  }

  // required int64 startTimestamp = 3;
  public static final int STARTTIMESTAMP_FIELD_NUMBER = 3;
  private long startTimestamp_;
  /**
   * <code>required int64 startTimestamp = 3;</code>
   *
   * <pre>
   *事件戳
   * </pre>
   */
  public boolean hasStartTimestamp() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required int64 startTimestamp = 3;</code>
   *
   * <pre>
   *事件戳
   * </pre>
   */
  public long getStartTimestamp() {
    return startTimestamp_;
  }

  // required int64 endTimestamp = 4;
  public static final int ENDTIMESTAMP_FIELD_NUMBER = 4;
  private long endTimestamp_;
  /**
   * <code>required int64 endTimestamp = 4;</code>
   *
   * <pre>
   *事件戳
   * </pre>
   */
  public boolean hasEndTimestamp() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>required int64 endTimestamp = 4;</code>
   *
   * <pre>
   *事件戳
   * </pre>
   */
  public long getEndTimestamp() {
    return endTimestamp_;
  }

  // required int32 count = 5;
  public static final int COUNT_FIELD_NUMBER = 5;
  private int count_;
  /**
   * <code>required int32 count = 5;</code>
   *
   * <pre>
   *指令计数器
   * </pre>
   */
  public boolean hasCount() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>required int32 count = 5;</code>
   *
   * <pre>
   *指令计数器
   * </pre>
   */
  public int getCount() {
    return count_;
  }

  // required int32 needCount = 6;
  public static final int NEEDCOUNT_FIELD_NUMBER = 6;
  private int needCount_;
  /**
   * <code>required int32 needCount = 6;</code>
   *
   * <pre>
   *需要执行的次数
   * </pre>
   */
  public boolean hasNeedCount() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>required int32 needCount = 6;</code>
   *
   * <pre>
   *需要执行的次数
   * </pre>
   */
  public int getNeedCount() {
    return needCount_;
  }

  // required .Status status = 7;
  public static final int STATUS_FIELD_NUMBER = 7;
  private awt.proto.enums.Status status_;
  /**
   * <code>required .Status status = 7;</code>
   */
  public boolean hasStatus() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>required .Status status = 7;</code>
   */
  public awt.proto.enums.Status getStatus() {
    return status_;
  }

  // optional .ElementAction elementAction = 8;
  public static final int ELEMENTACTION_FIELD_NUMBER = 8;
  private awt.proto.enums.ElementAction elementAction_;
  /**
   * <code>optional .ElementAction elementAction = 8;</code>
   */
  public boolean hasElementAction() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>optional .ElementAction elementAction = 8;</code>
   */
  public awt.proto.enums.ElementAction getElementAction() {
    return elementAction_;
  }

  // optional .TankAction tankAction = 9;
  public static final int TANKACTION_FIELD_NUMBER = 9;
  private awt.proto.enums.TankAction tankAction_;
  /**
   * <code>optional .TankAction tankAction = 9;</code>
   */
  public boolean hasTankAction() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <code>optional .TankAction tankAction = 9;</code>
   */
  public awt.proto.enums.TankAction getTankAction() {
    return tankAction_;
  }

  // optional .Direct direct = 10;
  public static final int DIRECT_FIELD_NUMBER = 10;
  private awt.proto.enums.Direct direct_;
  /**
   * <code>optional .Direct direct = 10;</code>
   */
  public boolean hasDirect() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <code>optional .Direct direct = 10;</code>
   */
  public awt.proto.enums.Direct getDirect() {
    return direct_;
  }

  // optional int32 newData = 11;
  public static final int NEWDATA_FIELD_NUMBER = 11;
  private int newData_;
  /**
   * <code>optional int32 newData = 11;</code>
   */
  public boolean hasNewData() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <code>optional int32 newData = 11;</code>
   */
  public int getNewData() {
    return newData_;
  }

  // optional .MsgAction msgAction = 12;
  public static final int MSGACTION_FIELD_NUMBER = 12;
  private awt.proto.enums.MsgAction msgAction_;
  /**
   * <code>optional .MsgAction msgAction = 12;</code>
   */
  public boolean hasMsgAction() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <code>optional .MsgAction msgAction = 12;</code>
   */
  public awt.proto.enums.MsgAction getMsgAction() {
    return msgAction_;
  }

  // optional int32 playerId = 13;
  public static final int PLAYERID_FIELD_NUMBER = 13;
  private int playerId_;
  /**
   * <code>optional int32 playerId = 13;</code>
   */
  public boolean hasPlayerId() {
    return ((bitField0_ & 0x00001000) == 0x00001000);
  }
  /**
   * <code>optional int32 playerId = 13;</code>
   */
  public int getPlayerId() {
    return playerId_;
  }

  private void initFields() {
    commandType_ = awt.proto.enums.CommandType.ELEMENT_UPDATE_COMMAND;
    elementId_ = 0;
    startTimestamp_ = 0L;
    endTimestamp_ = 0L;
    count_ = 0;
    needCount_ = 0;
    status_ = awt.proto.enums.Status.ACCEPT;
    elementAction_ = awt.proto.enums.ElementAction.DEAD;
    tankAction_ = awt.proto.enums.TankAction.FIRE;
    direct_ = awt.proto.enums.Direct.UP;
    newData_ = 0;
    msgAction_ = awt.proto.enums.MsgAction.LOGIN;
    playerId_ = 0;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized != -1) return isInitialized == 1;

    if (!hasCommandType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasStartTimestamp()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasEndTimestamp()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasCount()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasNeedCount()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasStatus()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeEnum(1, commandType_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, elementId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(3, startTimestamp_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt64(4, endTimestamp_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, count_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, needCount_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeEnum(7, status_.getNumber());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeEnum(8, elementAction_.getNumber());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeEnum(9, tankAction_.getNumber());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeEnum(10, direct_.getNumber());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(11, newData_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeEnum(12, msgAction_.getNumber());
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      output.writeInt32(13, playerId_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, commandType_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, elementId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, startTimestamp_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, endTimestamp_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, count_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, needCount_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, status_.getNumber());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, elementAction_.getNumber());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, tankAction_.getNumber());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, direct_.getNumber());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, newData_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(12, msgAction_.getNumber());
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, playerId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static awt.proto.command.Command parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static awt.proto.command.Command parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static awt.proto.command.Command parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static awt.proto.command.Command parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static awt.proto.command.Command parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static awt.proto.command.Command parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static awt.proto.command.Command parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static awt.proto.command.Command parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static awt.proto.command.Command parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static awt.proto.command.Command parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(awt.proto.command.Command prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Command}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder>
     implements awt.proto.command.CommandOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return awt.proto.command.CommandProto.internal_static_Command_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return awt.proto.command.CommandProto.internal_static_Command_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              awt.proto.command.Command.class, awt.proto.command.Command.Builder.class);
    }

    // Construct using awt.proto.command.Command.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      commandType_ = awt.proto.enums.CommandType.ELEMENT_UPDATE_COMMAND;
      bitField0_ = (bitField0_ & ~0x00000001);
      elementId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      startTimestamp_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      endTimestamp_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      count_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      needCount_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      status_ = awt.proto.enums.Status.ACCEPT;
      bitField0_ = (bitField0_ & ~0x00000040);
      elementAction_ = awt.proto.enums.ElementAction.DEAD;
      bitField0_ = (bitField0_ & ~0x00000080);
      tankAction_ = awt.proto.enums.TankAction.FIRE;
      bitField0_ = (bitField0_ & ~0x00000100);
      direct_ = awt.proto.enums.Direct.UP;
      bitField0_ = (bitField0_ & ~0x00000200);
      newData_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      msgAction_ = awt.proto.enums.MsgAction.LOGIN;
      bitField0_ = (bitField0_ & ~0x00000800);
      playerId_ = 0;
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return awt.proto.command.CommandProto.internal_static_Command_descriptor;
    }

    public awt.proto.command.Command getDefaultInstanceForType() {
      return awt.proto.command.Command.getDefaultInstance();
    }

    public awt.proto.command.Command build() {
      awt.proto.command.Command result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public awt.proto.command.Command buildPartial() {
      awt.proto.command.Command result = new awt.proto.command.Command(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.commandType_ = commandType_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.elementId_ = elementId_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.startTimestamp_ = startTimestamp_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.endTimestamp_ = endTimestamp_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.count_ = count_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.needCount_ = needCount_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.status_ = status_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.elementAction_ = elementAction_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.tankAction_ = tankAction_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      result.direct_ = direct_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000400;
      }
      result.newData_ = newData_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000800;
      }
      result.msgAction_ = msgAction_;
      if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
        to_bitField0_ |= 0x00001000;
      }
      result.playerId_ = playerId_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof awt.proto.command.Command) {
        return mergeFrom((awt.proto.command.Command)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(awt.proto.command.Command other) {
      if (other == awt.proto.command.Command.getDefaultInstance()) return this;
      if (other.hasCommandType()) {
        setCommandType(other.getCommandType());
      }
      if (other.hasElementId()) {
        setElementId(other.getElementId());
      }
      if (other.hasStartTimestamp()) {
        setStartTimestamp(other.getStartTimestamp());
      }
      if (other.hasEndTimestamp()) {
        setEndTimestamp(other.getEndTimestamp());
      }
      if (other.hasCount()) {
        setCount(other.getCount());
      }
      if (other.hasNeedCount()) {
        setNeedCount(other.getNeedCount());
      }
      if (other.hasStatus()) {
        setStatus(other.getStatus());
      }
      if (other.hasElementAction()) {
        setElementAction(other.getElementAction());
      }
      if (other.hasTankAction()) {
        setTankAction(other.getTankAction());
      }
      if (other.hasDirect()) {
        setDirect(other.getDirect());
      }
      if (other.hasNewData()) {
        setNewData(other.getNewData());
      }
      if (other.hasMsgAction()) {
        setMsgAction(other.getMsgAction());
      }
      if (other.hasPlayerId()) {
        setPlayerId(other.getPlayerId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasCommandType()) {
        
        return false;
      }
      if (!hasStartTimestamp()) {
        
        return false;
      }
      if (!hasEndTimestamp()) {
        
        return false;
      }
      if (!hasCount()) {
        
        return false;
      }
      if (!hasNeedCount()) {
        
        return false;
      }
      if (!hasStatus()) {
        
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      awt.proto.command.Command parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (awt.proto.command.Command) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    // required .CommandType commandType = 1;
    private awt.proto.enums.CommandType commandType_ = awt.proto.enums.CommandType.ELEMENT_UPDATE_COMMAND;
    /**
     * <code>required .CommandType commandType = 1;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public boolean hasCommandType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .CommandType commandType = 1;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public awt.proto.enums.CommandType getCommandType() {
      return commandType_;
    }
    /**
     * <code>required .CommandType commandType = 1;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public Builder setCommandType(awt.proto.enums.CommandType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      commandType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required .CommandType commandType = 1;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public Builder clearCommandType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      commandType_ = awt.proto.enums.CommandType.ELEMENT_UPDATE_COMMAND;
      onChanged();
      return this;
    }

    // optional int32 elementId = 2;
    private int elementId_ ;
    /**
     * <code>optional int32 elementId = 2;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public boolean hasElementId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 elementId = 2;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public int getElementId() {
      return elementId_;
    }
    /**
     * <code>optional int32 elementId = 2;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public Builder setElementId(int value) {
      bitField0_ |= 0x00000002;
      elementId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 elementId = 2;</code>
     *
     * <pre>
     *元素id
     * </pre>
     */
    public Builder clearElementId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      elementId_ = 0;
      onChanged();
      return this;
    }

    // required int64 startTimestamp = 3;
    private long startTimestamp_ ;
    /**
     * <code>required int64 startTimestamp = 3;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 startTimestamp = 3;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }
    /**
     * <code>required int64 startTimestamp = 3;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public Builder setStartTimestamp(long value) {
      bitField0_ |= 0x00000004;
      startTimestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 startTimestamp = 3;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public Builder clearStartTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000004);
      startTimestamp_ = 0L;
      onChanged();
      return this;
    }

    // required int64 endTimestamp = 4;
    private long endTimestamp_ ;
    /**
     * <code>required int64 endTimestamp = 4;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 endTimestamp = 4;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }
    /**
     * <code>required int64 endTimestamp = 4;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public Builder setEndTimestamp(long value) {
      bitField0_ |= 0x00000008;
      endTimestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 endTimestamp = 4;</code>
     *
     * <pre>
     *事件戳
     * </pre>
     */
    public Builder clearEndTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000008);
      endTimestamp_ = 0L;
      onChanged();
      return this;
    }

    // required int32 count = 5;
    private int count_ ;
    /**
     * <code>required int32 count = 5;</code>
     *
     * <pre>
     *指令计数器
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 count = 5;</code>
     *
     * <pre>
     *指令计数器
     * </pre>
     */
    public int getCount() {
      return count_;
    }
    /**
     * <code>required int32 count = 5;</code>
     *
     * <pre>
     *指令计数器
     * </pre>
     */
    public Builder setCount(int value) {
      bitField0_ |= 0x00000010;
      count_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 count = 5;</code>
     *
     * <pre>
     *指令计数器
     * </pre>
     */
    public Builder clearCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      count_ = 0;
      onChanged();
      return this;
    }

    // required int32 needCount = 6;
    private int needCount_ ;
    /**
     * <code>required int32 needCount = 6;</code>
     *
     * <pre>
     *需要执行的次数
     * </pre>
     */
    public boolean hasNeedCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 needCount = 6;</code>
     *
     * <pre>
     *需要执行的次数
     * </pre>
     */
    public int getNeedCount() {
      return needCount_;
    }
    /**
     * <code>required int32 needCount = 6;</code>
     *
     * <pre>
     *需要执行的次数
     * </pre>
     */
    public Builder setNeedCount(int value) {
      bitField0_ |= 0x00000020;
      needCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 needCount = 6;</code>
     *
     * <pre>
     *需要执行的次数
     * </pre>
     */
    public Builder clearNeedCount() {
      bitField0_ = (bitField0_ & ~0x00000020);
      needCount_ = 0;
      onChanged();
      return this;
    }

    // required .Status status = 7;
    private awt.proto.enums.Status status_ = awt.proto.enums.Status.ACCEPT;
    /**
     * <code>required .Status status = 7;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .Status status = 7;</code>
     */
    public awt.proto.enums.Status getStatus() {
      return status_;
    }
    /**
     * <code>required .Status status = 7;</code>
     */
    public Builder setStatus(awt.proto.enums.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required .Status status = 7;</code>
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000040);
      status_ = awt.proto.enums.Status.ACCEPT;
      onChanged();
      return this;
    }

    // optional .ElementAction elementAction = 8;
    private awt.proto.enums.ElementAction elementAction_ = awt.proto.enums.ElementAction.DEAD;
    /**
     * <code>optional .ElementAction elementAction = 8;</code>
     */
    public boolean hasElementAction() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .ElementAction elementAction = 8;</code>
     */
    public awt.proto.enums.ElementAction getElementAction() {
      return elementAction_;
    }
    /**
     * <code>optional .ElementAction elementAction = 8;</code>
     */
    public Builder setElementAction(awt.proto.enums.ElementAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000080;
      elementAction_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .ElementAction elementAction = 8;</code>
     */
    public Builder clearElementAction() {
      bitField0_ = (bitField0_ & ~0x00000080);
      elementAction_ = awt.proto.enums.ElementAction.DEAD;
      onChanged();
      return this;
    }

    // optional .TankAction tankAction = 9;
    private awt.proto.enums.TankAction tankAction_ = awt.proto.enums.TankAction.FIRE;
    /**
     * <code>optional .TankAction tankAction = 9;</code>
     */
    public boolean hasTankAction() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TankAction tankAction = 9;</code>
     */
    public awt.proto.enums.TankAction getTankAction() {
      return tankAction_;
    }
    /**
     * <code>optional .TankAction tankAction = 9;</code>
     */
    public Builder setTankAction(awt.proto.enums.TankAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      tankAction_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .TankAction tankAction = 9;</code>
     */
    public Builder clearTankAction() {
      bitField0_ = (bitField0_ & ~0x00000100);
      tankAction_ = awt.proto.enums.TankAction.FIRE;
      onChanged();
      return this;
    }

    // optional .Direct direct = 10;
    private awt.proto.enums.Direct direct_ = awt.proto.enums.Direct.UP;
    /**
     * <code>optional .Direct direct = 10;</code>
     */
    public boolean hasDirect() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .Direct direct = 10;</code>
     */
    public awt.proto.enums.Direct getDirect() {
      return direct_;
    }
    /**
     * <code>optional .Direct direct = 10;</code>
     */
    public Builder setDirect(awt.proto.enums.Direct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      direct_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .Direct direct = 10;</code>
     */
    public Builder clearDirect() {
      bitField0_ = (bitField0_ & ~0x00000200);
      direct_ = awt.proto.enums.Direct.UP;
      onChanged();
      return this;
    }

    // optional int32 newData = 11;
    private int newData_ ;
    /**
     * <code>optional int32 newData = 11;</code>
     */
    public boolean hasNewData() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 newData = 11;</code>
     */
    public int getNewData() {
      return newData_;
    }
    /**
     * <code>optional int32 newData = 11;</code>
     */
    public Builder setNewData(int value) {
      bitField0_ |= 0x00000400;
      newData_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 newData = 11;</code>
     */
    public Builder clearNewData() {
      bitField0_ = (bitField0_ & ~0x00000400);
      newData_ = 0;
      onChanged();
      return this;
    }

    // optional .MsgAction msgAction = 12;
    private awt.proto.enums.MsgAction msgAction_ = awt.proto.enums.MsgAction.LOGIN;
    /**
     * <code>optional .MsgAction msgAction = 12;</code>
     */
    public boolean hasMsgAction() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .MsgAction msgAction = 12;</code>
     */
    public awt.proto.enums.MsgAction getMsgAction() {
      return msgAction_;
    }
    /**
     * <code>optional .MsgAction msgAction = 12;</code>
     */
    public Builder setMsgAction(awt.proto.enums.MsgAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000800;
      msgAction_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .MsgAction msgAction = 12;</code>
     */
    public Builder clearMsgAction() {
      bitField0_ = (bitField0_ & ~0x00000800);
      msgAction_ = awt.proto.enums.MsgAction.LOGIN;
      onChanged();
      return this;
    }

    // optional int32 playerId = 13;
    private int playerId_ ;
    /**
     * <code>optional int32 playerId = 13;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 playerId = 13;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }
    /**
     * <code>optional int32 playerId = 13;</code>
     */
    public Builder setPlayerId(int value) {
      bitField0_ |= 0x00001000;
      playerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 playerId = 13;</code>
     */
    public Builder clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00001000);
      playerId_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:Command)
  }

  static {
    defaultInstance = new Command(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:Command)
}

