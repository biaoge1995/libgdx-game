// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package awt.proto.enums;

/**
 * Protobuf enum {@code CommandType}
 */
public enum CommandType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ELEMENT_UPDATE_COMMAND = 0;</code>
   *
   * <pre>
   *元素通用命令
   * </pre>
   */
  ELEMENT_UPDATE_COMMAND(0, 0),
  /**
   * <code>REDIRECT_COMMAND = 1;</code>
   *
   * <pre>
   *转向命令
   * </pre>
   */
  REDIRECT_COMMAND(1, 1),
  /**
   * <code>TANK_COMMAND = 2;</code>
   *
   * <pre>
   *tank命令
   * </pre>
   */
  TANK_COMMAND(2, 2),
  /**
   * <code>USER_ACTION_COMMAND = 3;</code>
   *
   * <pre>
   *user用户命令
   * </pre>
   */
  USER_ACTION_COMMAND(3, 3),
  /**
   * <code>TANK_FIRE_COMMAND = 4;</code>
   *
   * <pre>
   *tank开火命令
   * </pre>
   */
  TANK_FIRE_COMMAND(4, 4),
  ;

  /**
   * <code>ELEMENT_UPDATE_COMMAND = 0;</code>
   *
   * <pre>
   *元素通用命令
   * </pre>
   */
  public static final int ELEMENT_UPDATE_COMMAND_VALUE = 0;
  /**
   * <code>REDIRECT_COMMAND = 1;</code>
   *
   * <pre>
   *转向命令
   * </pre>
   */
  public static final int REDIRECT_COMMAND_VALUE = 1;
  /**
   * <code>TANK_COMMAND = 2;</code>
   *
   * <pre>
   *tank命令
   * </pre>
   */
  public static final int TANK_COMMAND_VALUE = 2;
  /**
   * <code>USER_ACTION_COMMAND = 3;</code>
   *
   * <pre>
   *user用户命令
   * </pre>
   */
  public static final int USER_ACTION_COMMAND_VALUE = 3;
  /**
   * <code>TANK_FIRE_COMMAND = 4;</code>
   *
   * <pre>
   *tank开火命令
   * </pre>
   */
  public static final int TANK_FIRE_COMMAND_VALUE = 4;


  public final int getNumber() { return value; }

  public static CommandType valueOf(int value) {
    switch (value) {
      case 0: return ELEMENT_UPDATE_COMMAND;
      case 1: return REDIRECT_COMMAND;
      case 2: return TANK_COMMAND;
      case 3: return USER_ACTION_COMMAND;
      case 4: return TANK_FIRE_COMMAND;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static com.google.protobuf.Internal.EnumLiteMap<CommandType>
      internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
          public CommandType findValueByNumber(int number) {
            return CommandType.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return awt.proto.enums.Enums.getDescriptor().getEnumTypes().get(10);
  }

  private static final CommandType[] VALUES = values();

  public static CommandType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private CommandType(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:CommandType)
}

