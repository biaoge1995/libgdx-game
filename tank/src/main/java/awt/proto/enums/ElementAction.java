// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package awt.proto.enums;

/**
 * Protobuf enum {@code ElementAction}
 *
 * <pre>
 *元素动作
 * </pre>
 */
public enum ElementAction
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>DEAD = 1;</code>
   *
   * <pre>
   *死亡
   * </pre>
   */
  DEAD(0, 1),
  /**
   * <code>MOVE = 2;</code>
   *
   * <pre>
   *移动
   * </pre>
   */
  MOVE(1, 2),
  /**
   * <code>LIVE = 3;</code>
   *
   * <pre>
   *复活
   * </pre>
   */
  LIVE(2, 3),
  /**
   * <code>BLOOD = 4;</code>
   *
   * <pre>
   *血条加减
   * </pre>
   */
  BLOOD(3, 4),
  /**
   * <code>STEP = 5;</code>
   *
   * <pre>
   *步长修改命令
   * </pre>
   */
  STEP(4, 5),
  ;

  /**
   * <code>DEAD = 1;</code>
   *
   * <pre>
   *死亡
   * </pre>
   */
  public static final int DEAD_VALUE = 1;
  /**
   * <code>MOVE = 2;</code>
   *
   * <pre>
   *移动
   * </pre>
   */
  public static final int MOVE_VALUE = 2;
  /**
   * <code>LIVE = 3;</code>
   *
   * <pre>
   *复活
   * </pre>
   */
  public static final int LIVE_VALUE = 3;
  /**
   * <code>BLOOD = 4;</code>
   *
   * <pre>
   *血条加减
   * </pre>
   */
  public static final int BLOOD_VALUE = 4;
  /**
   * <code>STEP = 5;</code>
   *
   * <pre>
   *步长修改命令
   * </pre>
   */
  public static final int STEP_VALUE = 5;


  public final int getNumber() { return value; }

  public static ElementAction valueOf(int value) {
    switch (value) {
      case 1: return DEAD;
      case 2: return MOVE;
      case 3: return LIVE;
      case 4: return BLOOD;
      case 5: return STEP;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ElementAction>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static com.google.protobuf.Internal.EnumLiteMap<ElementAction>
      internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ElementAction>() {
          public ElementAction findValueByNumber(int number) {
            return ElementAction.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return awt.proto.enums.Enums.getDescriptor().getEnumTypes().get(8);
  }

  private static final ElementAction[] VALUES = values();

  public static ElementAction valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private ElementAction(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ElementAction)
}

