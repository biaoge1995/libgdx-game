// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package awt.proto.enums;

/**
 * Protobuf enum {@code Direct}
 *
 * <pre>
 *方向
 * </pre>
 */
public enum Direct
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UP = 0;</code>
   */
  UP(0, 0),
  /**
   * <code>DOWN = 1;</code>
   */
  DOWN(1, 1),
  /**
   * <code>RIGHT = 2;</code>
   */
  RIGHT(2, 2),
  /**
   * <code>LEFT = 3;</code>
   */
  LEFT(3, 3),
  ;

  /**
   * <code>UP = 0;</code>
   */
  public static final int UP_VALUE = 0;
  /**
   * <code>DOWN = 1;</code>
   */
  public static final int DOWN_VALUE = 1;
  /**
   * <code>RIGHT = 2;</code>
   */
  public static final int RIGHT_VALUE = 2;
  /**
   * <code>LEFT = 3;</code>
   */
  public static final int LEFT_VALUE = 3;


  public final int getNumber() { return value; }

  public static Direct valueOf(int value) {
    switch (value) {
      case 0: return UP;
      case 1: return DOWN;
      case 2: return RIGHT;
      case 3: return LEFT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Direct>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static com.google.protobuf.Internal.EnumLiteMap<Direct>
      internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Direct>() {
          public Direct findValueByNumber(int number) {
            return Direct.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return awt.proto.enums.Enums.getDescriptor().getEnumTypes().get(7);
  }

  private static final Direct[] VALUES = values();

  public static Direct valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private Direct(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Direct)
}

