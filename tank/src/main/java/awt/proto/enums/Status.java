// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package awt.proto.enums;

/**
 * Protobuf enum {@code Status}
 *
 * <pre>
 *command 枚举值
 * </pre>
 */
public enum Status
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ACCEPT = 1;</code>
   *
   * <pre>
   *等待调度中
   * </pre>
   */
  ACCEPT(0, 1),
  /**
   * <code>SUCCESS = 2;</code>
   *
   * <pre>
   *执行完成
   * </pre>
   */
  SUCCESS(1, 2),
  /**
   * <code>FAILED = 3;</code>
   *
   * <pre>
   *执行失败
   * </pre>
   */
  FAILED(2, 3),
  /**
   * <code>INTERRUPT = 4;</code>
   *
   * <pre>
   *打断
   * </pre>
   */
  INTERRUPT(3, 4),
  /**
   * <code>WAIT = 5;</code>
   *
   * <pre>
   *等待
   * </pre>
   */
  WAIT(4, 5),
  ;

  /**
   * <code>ACCEPT = 1;</code>
   *
   * <pre>
   *等待调度中
   * </pre>
   */
  public static final int ACCEPT_VALUE = 1;
  /**
   * <code>SUCCESS = 2;</code>
   *
   * <pre>
   *执行完成
   * </pre>
   */
  public static final int SUCCESS_VALUE = 2;
  /**
   * <code>FAILED = 3;</code>
   *
   * <pre>
   *执行失败
   * </pre>
   */
  public static final int FAILED_VALUE = 3;
  /**
   * <code>INTERRUPT = 4;</code>
   *
   * <pre>
   *打断
   * </pre>
   */
  public static final int INTERRUPT_VALUE = 4;
  /**
   * <code>WAIT = 5;</code>
   *
   * <pre>
   *等待
   * </pre>
   */
  public static final int WAIT_VALUE = 5;


  public final int getNumber() { return value; }

  public static Status valueOf(int value) {
    switch (value) {
      case 1: return ACCEPT;
      case 2: return SUCCESS;
      case 3: return FAILED;
      case 4: return INTERRUPT;
      case 5: return WAIT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Status>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static com.google.protobuf.Internal.EnumLiteMap<Status>
      internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Status>() {
          public Status findValueByNumber(int number) {
            return Status.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return awt.proto.enums.Enums.getDescriptor().getEnumTypes().get(4);
  }

  private static final Status[] VALUES = values();

  public static Status valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private Status(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Status)
}

